{"version":3,"sources":["components/CheckBox.jsx","components/CollectionItem.jsx","components/TopBar.jsx","components/Collections.jsx","components/CollectionContentItem.jsx","components/CollectionView.jsx","App.js","index.js"],"names":["CheckBox","React","forwardRef","props","checkboxRef","onClick","e","stopPropagation","className","type","ref","xmlns","height","viewBox","width","fill","d","CollectionItem","cover","name","total","openCollection","collectionContextMenu","removeCollections","addToSelected","removeFromSelected","indexNumber","useRef","useState","checkboxState","checkboxStateUpdater","useEffect","current","addEventListener","state","target","checked","data-checked","tabIndex","onContextMenu","preventDefault","src","alt","title","TopBar","main","goBack","isNewCollection","newColMakingUpdater","currentCollection","addToCollections","editCollection","currentCollectionUpdater","theme","themeUpdater","undefined","inputRef","focus","Options","enable-background","chrome","tabs","create","url","app","getDetails","id","window","close","defaultValue","onKeyDown","key","blur","onBlur","value","content","index","Collections","collectionData","newCollection1","newCollection2","mainContRef","collectionRef","contextMenu","contextMenuState","contextMenuStateUpdater","contextMenuSelectedIndex","contextMenuSelectedIndexUpdater","x","clientX","offsetWidth","y","clientY","document","body","offsetHeight","style","left","top","selectedCollection","selectedCollectionUpdater","includes","filter","length","path","deSelectAll","children","forEach","lastElementChild","firstElementChild","dispatchEvent","Event","PromptConfirm","PromptConfirmMaker","data-state","role","navigator","clipboard","writeText","JSON","stringify","map","href","link","active","links","windows","incognito","display","msg","callback","i","CollectionContentItem","displayImg","linkContextMenu","removeLinkFromCollection","filterMeta","coverUpdater","startsWith","fetch","then","raw","text","data","imgUrl","update","onMouseDown","button","CollectionView","collection","isNew","addLinkToCollection","collectionViewRef","selectedLink","selectedLinkUpdater","parser","DOMParser","a","head","startPoint","search","endPoint","parsedHead","parseFromString","metaImgTag","querySelector","getAttribute","addLink","which","query","currentWindow","tab","colIndex","favIconUrl","App","dataUpdater","storage","local","get","collections","set","getElementById","oncontextmenu","newColMaking","initNewCollection1","classList","remove","add","newContentItem","unshift","indexes","Math","max","newData","initNewCollection2","push","Date","toUTCString","updatedData","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8724f8a7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CheckBox = React.forwardRef((props, checkboxRef) => {\r\n    return (\r\n        <label\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n            }}\r\n            className=\"inputCheckboxCont\"\r\n        >\r\n            <input type=\"checkbox\" ref={checkboxRef} />\r\n            <span className=\"inputCheckbox\">\r\n                <span className=\"check\">\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                        fill=\"#FFFFFF\"\r\n                    >\r\n                        <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\r\n                    </svg>\r\n                </span>\r\n            </span>\r\n        </label>\r\n    );\r\n});\r\n\r\nexport default CheckBox;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\nconst CollectionItem = ({\r\n    cover,\r\n    name,\r\n    total,\r\n    openCollection,\r\n    removeCollections,\r\n    collectionContextMenu,\r\n    addToSelected,\r\n    removeFromSelected,\r\n    indexNumber,\r\n}) => {\r\n    const checkboxRef = useRef(null);\r\n    const [checkboxState, checkboxStateUpdater] = useState(false);\r\n    useEffect(() => {\r\n        checkboxRef.current.addEventListener(\"change\", (e) => {\r\n            let state = e.target.checked;\r\n            checkboxStateUpdater(state);\r\n        });\r\n    }, []);\r\n    //try making change inside checkbox\r\n    useEffect(() => {\r\n        if (checkboxState === true) addToSelected(indexNumber);\r\n        if (checkboxState === false) removeFromSelected(indexNumber);\r\n    }, [checkboxState]);\r\n    return (\r\n        <div\r\n            className=\"collectionItem noImg\"\r\n            data-checked={checkboxState}\r\n            tabIndex=\"0\"\r\n            onClick={() => openCollection(indexNumber)}\r\n            onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                collectionContextMenu(e, indexNumber);\r\n            }}\r\n        >\r\n            <div className=\"cover\">\r\n                <img src={cover || \"\"} alt=\"Img\" />\r\n            </div>\r\n            <div className=\"info\">\r\n                <span className=\"name\" title={name}>\r\n                    {name || \"ddddd\"}\r\n                </span>\r\n                <span className=\"total\">\r\n                    {total\r\n                        ? total > 1\r\n                            ? total + \" Items\"\r\n                            : total + \" item\"\r\n                        : \"0 Item\"}\r\n                </span>\r\n            </div>\r\n            <div className=\"options\">\r\n                {/* <button\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        removeCollection(indexNumber);\r\n                    }}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                        fill=\"#FFFFFF\"\r\n                    >\r\n                        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n                    </svg>\r\n                </button> */}\r\n                <CheckBox ref={checkboxRef} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CollectionItem;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst TopBar = ({\r\n    main,\r\n    name,\r\n    goBack,\r\n    isNewCollection,\r\n    newColMakingUpdater,\r\n    currentCollection,\r\n    addToCollections,\r\n    editCollection,\r\n    currentCollectionUpdater,\r\n    theme,\r\n    themeUpdater,\r\n}) => {\r\n    isNewCollection = isNewCollection === undefined ? false : isNewCollection;\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n        if (isNewCollection) inputRef.current.focus();\r\n    }, [isNewCollection]);\r\n\r\n    const Options = (\r\n        <div className=\"options\">\r\n            <button\r\n                className=\"switchTheme\"\r\n                onClick={() => {\r\n                    if (theme === \"dark\") return themeUpdater(\"light\");\r\n                    if (theme === \"light\") return themeUpdater(\"dark\");\r\n                }}\r\n            >\r\n                {theme === \"dark\" ? (\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        enable-background=\"new 0 0 24 24\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                    >\r\n                        <path d=\"M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0 c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2 c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1 C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06 c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41 l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41 c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36 c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z\" />\r\n                    </svg>\r\n                ) : (\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        enable-background=\"new 0 0 24 24\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                    >\r\n                        <path d=\"M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36c-0.98,1.37-2.58,2.26-4.4,2.26 c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z\" />\r\n                    </svg>\r\n                )}\r\n            </button>\r\n            <button\r\n                className=\"openFull\"\r\n                onClick={() => {\r\n                    /* eslint-disable */\r\n                    chrome.tabs.create({\r\n                        url:\r\n                            \"chrome-extension://\" +\r\n                            chrome.app.getDetails().id +\r\n                            \"/index.html\",\r\n                    });\r\n                    /* eslint-enable */\r\n                }}\r\n            >\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    height=\"24px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                >\r\n                    <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\r\n                </svg>\r\n            </button>\r\n            <button className=\"close\" onClick={() => window.close()}>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    height=\"24px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                >\r\n                    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {main ? (\r\n                <div id=\"topbar\">\r\n                    <h2>Collections</h2>\r\n                    {Options}\r\n                </div>\r\n            ) : (\r\n                <div id=\"topbar\">\r\n                    <button className=\"goback\" onClick={goBack}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            height=\"24px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            width=\"24px\"\r\n                        >\r\n                            <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\" />\r\n                        </svg>\r\n                    </button>\r\n                    <h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            ref={inputRef}\r\n                            defaultValue={name || \"New Collection\"}\r\n                            onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\") e.target.blur();\r\n                            }}\r\n                            onBlur={(e) => {\r\n                                if (isNewCollection) {\r\n                                    if (e.target.value === \"\")\r\n                                        newColMakingUpdater(false);\r\n                                }\r\n                                if (e.target.value === \"\")\r\n                                    return (e.target.value = name);\r\n                                if (!isNewCollection)\r\n                                    return editCollection({\r\n                                        type: \"rename\",\r\n                                        index: currentCollection,\r\n                                        name: e.target.value,\r\n                                    });\r\n                                if (isNewCollection) {\r\n                                    addToCollections({\r\n                                        name: e.target.value,\r\n                                        content: [],\r\n                                    });\r\n                                    newColMakingUpdater(false);\r\n                                    currentCollectionUpdater(0);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h2>\r\n                    {Options}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport CollectionItem from \"./CollectionItem\";\r\nimport TopBar from \"./TopBar\";\r\n\r\nconst Collections = ({\r\n    collectionData,\r\n    removeCollections,\r\n    currentCollectionUpdater,\r\n    newCollection1,\r\n    newCollection2,\r\n    theme,\r\n    themeUpdater,\r\n}) => {\r\n    const openCollection = (index) => {\r\n        currentCollectionUpdater(index);\r\n    };\r\n    const mainContRef = useRef(null);\r\n    const collectionRef = useRef(null);\r\n    const contextMenu = useRef(null);\r\n    const [contextMenuState, contextMenuStateUpdater] = useState(\"closed\");\r\n    const [contextMenuSelectedIndex, contextMenuSelectedIndexUpdater] =\r\n        useState(null);\r\n    const collectionContextMenu = (e, index) => {\r\n        if (contextMenu.current !== null) {\r\n            let x =\r\n                e.clientX >\r\n                mainContRef.current.offsetWidth -\r\n                    contextMenu.current.offsetWidth\r\n                    ? mainContRef.current.offsetWidth -\r\n                      contextMenu.current.offsetWidth -\r\n                      30\r\n                    : e.clientX;\r\n            let y =\r\n                e.clientY >\r\n                document.body.offsetHeight - contextMenu.current.offsetHeight\r\n                    ? document.body.offsetHeight -\r\n                      contextMenu.current.offsetHeight -\r\n                      30\r\n                    : e.clientY;\r\n            contextMenuSelectedIndexUpdater(index);\r\n            contextMenu.current.style.left = x + \"px\";\r\n            contextMenu.current.style.top = y + \"px\";\r\n        }\r\n        contextMenuStateUpdater(\"opened\");\r\n    };\r\n    const [selectedCollection, selectedCollectionUpdater] = useState([]);\r\n    const addToSelected = (index) => {\r\n        if (selectedCollection.includes(index)) return;\r\n        selectedCollectionUpdater([...selectedCollection, index]);\r\n    };\r\n    const removeFromSelected = (index) => {\r\n        if (selectedCollection.includes(index)) {\r\n            selectedCollectionUpdater([\r\n                ...selectedCollection.filter((e) => e !== index),\r\n            ]);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (selectedCollection.length > 0) {\r\n        }\r\n    }, [selectedCollection]);\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", (e) => {\r\n            if (\r\n                contextMenu !== null &&\r\n                e.target !== contextMenu.current &&\r\n                !e.path.includes(contextMenu.current)\r\n            ) {\r\n                contextMenuStateUpdater(\"closed\");\r\n            }\r\n        });\r\n    }, []);\r\n    const deSelectAll = () => {\r\n        selectedCollectionUpdater([]);\r\n        [...collectionRef.current?.children].forEach((e) => {\r\n            e.lastElementChild.firstElementChild.firstElementChild.checked = false;\r\n            e.lastElementChild.firstElementChild.firstElementChild.dispatchEvent(\r\n                new Event(\"change\")\r\n            );\r\n        });\r\n    };\r\n    const [PromptConfirm, PromptConfirmMaker] = useState(\"\");\r\n    const promptConfirm = (msg, callback) => {\r\n        PromptConfirmMaker(\r\n            <div className=\"promptConfirmCont\">\r\n                <div className=\"prompt\">\r\n                    <div className=\"msg\">{msg}</div>\r\n                    <div className=\"option\">\r\n                        <button\r\n                            onClick={() => {\r\n                                callback();\r\n                                PromptConfirmMaker(\"\");\r\n                            }}\r\n                            className=\"warn\"\r\n                        >\r\n                            Confirm\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                PromptConfirmMaker(\"\");\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            <TopBar\r\n                main={true}\r\n                name=\"Collections\"\r\n                currentCollectionUpdater={currentCollectionUpdater}\r\n                theme={theme}\r\n                themeUpdater={themeUpdater}\r\n            />\r\n            <div id=\"main\" ref={mainContRef}>\r\n                <div\r\n                    className=\"contextMenu\"\r\n                    ref={contextMenu}\r\n                    data-state={contextMenuState}\r\n                    onClick={() => {\r\n                        contextMenuStateUpdater(\"closed\");\r\n                    }}\r\n                >\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            removeCollections([contextMenuSelectedIndex]);\r\n                        }}\r\n                    >\r\n                        Remove Collection\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            navigator.clipboard.writeText(\r\n                                JSON.stringify(\r\n                                    collectionData[contextMenuSelectedIndex]\r\n                                        .content\r\n                                )\r\n                            );\r\n                        }}\r\n                    >\r\n                        Copy Links(JSON)\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null) {\r\n                                let links = collectionData[\r\n                                    contextMenuSelectedIndex\r\n                                ].content.map((e) => e.href);\r\n                                links.forEach((link) => {\r\n                                    chrome.tabs.create({\r\n                                        url: link,\r\n                                        active: false,\r\n                                    }); /* eslint-enable */\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        Open All\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            let links = collectionData[\r\n                                contextMenuSelectedIndex\r\n                            ].content.map((e) => e.href);\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open All in new window\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            let links = collectionData[\r\n                                contextMenuSelectedIndex\r\n                            ].content.map((e) => e.href);\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open All in incognito window\r\n                    </li>\r\n                </div>\r\n                <div\r\n                    className=\"deleteSelected\"\r\n                    style={\r\n                        selectedCollection.length === 0\r\n                            ? { display: \"none\" }\r\n                            : { display: \"flex\" }\r\n                    }\r\n                >\r\n                    <span className=\"selectedInfo\">\r\n                        {selectedCollection.length} selected\r\n                    </span>\r\n                    <span className=\"options\">\r\n                        <button\r\n                            onClick={() => {\r\n                                // removeCollections(selectedCollection);\r\n                                // deSelectAll();\r\n                                promptConfirm(\r\n                                    \"Are you sure you want to delete \" +\r\n                                        selectedCollection.length +\r\n                                        \" collections\",\r\n                                    () => {\r\n                                        removeCollections(selectedCollection);\r\n                                        deSelectAll();\r\n                                    }\r\n                                );\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button onClick={deSelectAll}>\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className=\"createNew\"\r\n                    style={\r\n                        selectedCollection.length === 0\r\n                            ? { display: \"flex\" }\r\n                            : { display: \"none\" }\r\n                    }\r\n                >\r\n                    <button className=\"newEmpty\" onClick={newCollection1}>\r\n                        Create New Collection\r\n                    </button>\r\n                    <button className=\"newFromAll\" onClick={newCollection2}>\r\n                        Create New Collection from All Opened tabs\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    id=\"collections\"\r\n                    ref={collectionRef}\r\n                    className=\"collection-view\"\r\n                >\r\n                    {collectionData === null ? (\r\n                        <p>No Collection</p>\r\n                    ) : collectionData.length === 0 ? (\r\n                        <p>No Collection</p>\r\n                    ) : (\r\n                        collectionData.map((e, i) => (\r\n                            <CollectionItem\r\n                                key={e.name + i}\r\n                                name={e.name}\r\n                                cover={\r\n                                    e.content.length !== 0\r\n                                        ? e.content[0].cover\r\n                                        : \"\"\r\n                                }\r\n                                total={e.content.length}\r\n                                indexNumber={i}\r\n                                openCollection={openCollection}\r\n                                removeCollections={removeCollections}\r\n                                collectionContextMenu={collectionContextMenu}\r\n                                addToSelected={addToSelected}\r\n                                removeFromSelected={removeFromSelected}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {PromptConfirm}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Collections;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nconst CollectionContentItem = ({\r\n    title,\r\n    href,\r\n    displayImg,\r\n    removeLinkFromCollection,\r\n    currentCollection,\r\n    linkContextMenu,\r\n    addToSelected,\r\n    removeFromSelected,\r\n    indexNumber,\r\n    filterMeta,\r\n}) => {\r\n    const checkboxRef = useRef(null);\r\n    const [checkboxState, checkboxStateUpdater] = useState(false);\r\n    const [cover, coverUpdater] = useState(\"\");\r\n    useEffect(() => {\r\n        checkboxRef.current.addEventListener(\"change\", (e) => {\r\n            let state = e.target.checked;\r\n            checkboxStateUpdater(state);\r\n        });\r\n        if (href.startsWith(\"http\"))\r\n            fetch(href)\r\n                .then((raw) => raw.text())\r\n                .then((data) => {\r\n                    filterMeta(data).then((imgUrl) => {\r\n                        if (imgUrl === \"\") imgUrl = displayImg;\r\n                        coverUpdater(imgUrl);\r\n                    });\r\n                });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (checkboxState === true) addToSelected(indexNumber);\r\n        if (checkboxState === false) removeFromSelected(indexNumber);\r\n    }, [checkboxState]);\r\n\r\n    return (\r\n        <div\r\n            className=\"collectionContentItem collectionItem\"\r\n            tabIndex=\"0\"\r\n            data-checked={checkboxState}\r\n            onClick={() => {\r\n                /* eslint-disable */\r\n                chrome.tabs.update({ imgUrl: href });\r\n                /* eslint-enable */\r\n            }}\r\n            onMouseDown={(e) => {\r\n                if (e.button === 1)\r\n                    /* eslint-disable */\r\n                    e.preventDefault();\r\n                chrome.tabs.create({ imgUrl: href, active: false });\r\n                /* eslint-enable */\r\n            }}\r\n            onContextMenu={(e) => {\r\n                linkContextMenu(e, indexNumber);\r\n            }}\r\n        >\r\n            <div className=\"cover\">\r\n                <img src={cover || \"\"} alt=\"Img\" />\r\n            </div>\r\n            <div className=\"info\">\r\n                <span className=\"name\" title={title}>\r\n                    {title || \"ddddd\"}\r\n                </span>\r\n                <span className=\"link\" title={href}>\r\n                    {href || \"\"}\r\n                </span>\r\n            </div>\r\n            <div className=\"options\">\r\n                {/* <button\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        removeLinkFromCollection(currentCollection, indexNumber);\r\n                    }}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                        fill=\"#FFFFFF\"\r\n                    >\r\n                        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n                    </svg>\r\n                </button> */}\r\n                <CheckBox ref={checkboxRef} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CollectionContentItem;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport CollectionContentItem from \"./CollectionContentItem\";\r\nimport TopBar from \"./TopBar\";\r\n\r\nconst CollectionView = ({\r\n    collection,\r\n    currentCollection,\r\n    currentCollectionUpdater,\r\n    isNew,\r\n    newColMakingUpdater,\r\n    newCollection1,\r\n    newCollection2,\r\n    addToCollections,\r\n    editCollection,\r\n    addLinkToCollection,\r\n    removeLinkFromCollection,\r\n    theme,\r\n    themeUpdater,\r\n}) => {\r\n    const goBack = () => {\r\n        currentCollectionUpdater(null);\r\n        if (isNew) newColMakingUpdater(false);\r\n    };\r\n    const mainContRef = useRef(null);\r\n    const collectionViewRef = useRef(null);\r\n    const contextMenu = useRef(null);\r\n    const [contextMenuState, contextMenuStateUpdater] = useState(\"closed\");\r\n    const [contextMenuSelectedIndex, contextMenuSelectedIndexUpdater] =\r\n        useState(null);\r\n    const linkContextMenu = (e, index) => {\r\n        if (contextMenu.current !== null) {\r\n            let x =\r\n                e.clientX >\r\n                mainContRef.current.offsetWidth -\r\n                    contextMenu.current.offsetWidth\r\n                    ? mainContRef.current.offsetWidth -\r\n                      contextMenu.current.offsetWidth -\r\n                      30\r\n                    : e.clientX;\r\n            let y =\r\n                e.clientY >\r\n                document.body.offsetHeight - contextMenu.current.offsetHeight\r\n                    ? document.body.offsetHeight -\r\n                      contextMenu.current.offsetHeight -\r\n                      30\r\n                    : e.clientY;\r\n            contextMenuSelectedIndexUpdater(index);\r\n            contextMenu.current.style.left = x + \"px\";\r\n            contextMenu.current.style.top = y + \"px\";\r\n        }\r\n        contextMenuStateUpdater(\"opened\");\r\n    };\r\n    const [selectedLink, selectedLinkUpdater] = useState([]);\r\n    const addToSelected = (index) => {\r\n        if (selectedLink.includes(index)) return;\r\n        selectedLinkUpdater([...selectedLink, index]);\r\n    };\r\n    const removeFromSelected = (index) => {\r\n        if (selectedLink.includes(index)) {\r\n            selectedLinkUpdater([...selectedLink.filter((e) => e !== index)]);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (selectedLink.length > 0) {\r\n        }\r\n    }, [selectedLink]);\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", (e) => {\r\n            if (\r\n                contextMenu !== null &&\r\n                e.target !== contextMenu.current &&\r\n                !e.path.includes(contextMenu.current)\r\n            ) {\r\n                contextMenuStateUpdater(\"closed\");\r\n            }\r\n        });\r\n    }, []);\r\n    const deSelectAll = () => {\r\n        selectedLinkUpdater([]);\r\n        [...collectionViewRef.current?.children].forEach((e) => {\r\n            e.lastElementChild.firstElementChild.firstElementChild.checked = false;\r\n            e.lastElementChild.firstElementChild.firstElementChild.dispatchEvent(\r\n                new Event(\"change\")\r\n            );\r\n        });\r\n    };\r\n    const parser = new DOMParser();\r\n    const filterMeta = async (data) => {\r\n        let head = \"\";\r\n        let startPoint = data.search(/<head.*?<\\/head>/gi);\r\n        let endPoint = data.search(/<\\/head>/);\r\n        for (let i = startPoint; i < endPoint; i++) {\r\n            head += data[i];\r\n        }\r\n        head += \"</head>\";\r\n        const parsedHead = parser.parseFromString(head, \"text/html\");\r\n        // const meta = parsedHead.head.getElementsByTagName(\"meta\");\r\n        const metaImgTag =\r\n            parsedHead.querySelector(\"meta[property='og:image']\") ||\r\n            parsedHead.querySelector(\"meta[name='og:image']\");\r\n        let imgUrl = metaImgTag ? metaImgTag.getAttribute(\"content\") : \"\";\r\n        return imgUrl;\r\n    };\r\n    const addLink = (which, e) => {\r\n        if (which === \"current\") {\r\n            //eslint-disable-next-line\r\n            chrome.tabs\r\n                .query({\r\n                    active: true,\r\n                    currentWindow: true,\r\n                })\r\n                .then((tabs) => {\r\n                    const tab = tabs[0];\r\n                    addLinkToCollection({\r\n                        colIndex: isNew ? 0 : currentCollection,\r\n                        link: tab.url,\r\n                        title: tab.title,\r\n                        cover: tab.favIconUrl,\r\n                    });\r\n                });\r\n        }\r\n        if (which === \"all\") {\r\n            //eslint-disable-next-line\r\n            chrome.tabs\r\n                .query({\r\n                    currentWindow: true,\r\n                })\r\n                .then((tabs) => {\r\n                    for (let i = tabs.length - 1; i >= 0; i--) {\r\n                        addLinkToCollection({\r\n                            colIndex: currentCollection,\r\n                            link: tabs[i].url,\r\n                            title: tabs[i].title,\r\n                            cover: tabs[i].favIconUrl,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n    let content;\r\n    content = (\r\n        <>\r\n            <TopBar\r\n                main={false}\r\n                name={collection === null ? null : collection.name}\r\n                goBack={goBack}\r\n                isNewCollection={isNew}\r\n                addToCollections={addToCollections}\r\n                newColMakingUpdater={newColMakingUpdater}\r\n                currentCollectionUpdater={currentCollectionUpdater}\r\n                editCollection={editCollection}\r\n                currentCollection={currentCollection}\r\n                theme={theme}\r\n                themeUpdater={themeUpdater}\r\n            />\r\n            <div id=\"main\" ref={mainContRef}>\r\n                <div\r\n                    className=\"contextMenu\"\r\n                    ref={contextMenu}\r\n                    data-state={contextMenuState}\r\n                    onClick={() => {\r\n                        contextMenuStateUpdater(\"closed\");\r\n                    }}\r\n                >\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            removeLinkFromCollection(currentCollection, [\r\n                                contextMenuSelectedIndex,\r\n                            ]);\r\n                        }}\r\n                    >\r\n                        Remove Link\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                navigator.clipboard.writeText(\r\n                                    collection.content[contextMenuSelectedIndex]\r\n                                        .href\r\n                                );\r\n                        }}\r\n                    >\r\n                        Copy Link\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.tabs.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                    state: \"maximized\",\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open in new window\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open in incognito window\r\n                    </li>\r\n                </div>\r\n                <div\r\n                    className=\"deleteSelected\"\r\n                    style={\r\n                        selectedLink.length === 0\r\n                            ? { display: \"none\" }\r\n                            : { display: \"flex\" }\r\n                    }\r\n                >\r\n                    <span className=\"selectedInfo\">\r\n                        {selectedLink.length} selected\r\n                    </span>\r\n                    <span className=\"options\">\r\n                        <button\r\n                            onClick={() => {\r\n                                /* eslint-disable */\r\n                                let links = collection.content\r\n                                    .filter((e, i) => selectedLink.includes(i))\r\n                                    .map((e) => e.href);\r\n                                links.forEach((link) => {\r\n                                    chrome.tabs.create({\r\n                                        url: link,\r\n                                        active: false,\r\n                                    }); /* eslint-enable */\r\n                                });\r\n                            }}\r\n                        >\r\n                            Open\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                /* eslint-disable */\r\n                                let links = collection.content\r\n                                    .filter((e, i) => selectedLink.includes(i))\r\n                                    .map((e) => e.href);\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                            }}\r\n                        >\r\n                            Open Incognito\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                removeLinkFromCollection(\r\n                                    currentCollection,\r\n                                    selectedLink\r\n                                );\r\n                                deSelectAll();\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button onClick={deSelectAll}>\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className=\"createNew\"\r\n                    style={\r\n                        selectedLink.length === 0\r\n                            ? { display: \"flex\" }\r\n                            : { display: \"none\" }\r\n                    }\r\n                >\r\n                    <button\r\n                        className=\"addCurrentLink\"\r\n                        onClick={() => addLink(\"current\")}\r\n                    >\r\n                        Add Current Tab\r\n                    </button>\r\n                    <button\r\n                        className=\"addCurrentLink\"\r\n                        onClick={() => addLink(\"all\")}\r\n                    >\r\n                        Add All opened Tabs\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    id=\"collectionView \"\r\n                    className=\"collection-view\"\r\n                    ref={collectionViewRef}\r\n                >\r\n                    {collection === null ? (\r\n                        <p>No Item</p>\r\n                    ) : collection.content.length === 0 ? (\r\n                        <p>No Item</p>\r\n                    ) : (\r\n                        collection.content.map((e, i) => (\r\n                            <CollectionContentItem\r\n                                title={e.title}\r\n                                href={e.href}\r\n                                displayImg={e.cover}\r\n                                key={e.href + i}\r\n                                indexNumber={i}\r\n                                currentCollection={currentCollection}\r\n                                removeLinkFromCollection={\r\n                                    removeLinkFromCollection\r\n                                }\r\n                                linkContextMenu={linkContextMenu}\r\n                                addToSelected={addToSelected}\r\n                                removeFromSelected={removeFromSelected}\r\n                                filterMeta={filterMeta}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n    return content;\r\n};\r\n\r\nexport default CollectionView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Collections from \"./components/Collections\";\r\nimport CollectionView from \"./components/CollectionView\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\n\r\nconst App = () => {\r\n    const [data, dataUpdater] = useState([]);\r\n    const [theme, themeUpdater] = useState(\"dark\");\r\n    /* eslint-disable */\r\n    useEffect(() => {\r\n        if (isDev) {\r\n            import(\"./testdata\").then((e) => {\r\n                dataUpdater(e.default);\r\n            });\r\n        } else {\r\n            chrome.storage.local.get(\"collections\", ({ collections }) => {\r\n                if (collections === undefined) {\r\n                    dataUpdater([]);\r\n                    chrome.storage.local.set({ collections: [] }, () => {});\r\n                } else dataUpdater(collections);\r\n            });\r\n            chrome.storage.local.get(\"theme\", ({ theme }) => {\r\n                if (theme === undefined) {\r\n                    themeUpdater(\"dark\");\r\n                    chrome.storage.local.set({ theme: \"dark\" }, () => {});\r\n                } else themeUpdater(theme);\r\n            });\r\n        }\r\n        document.getElementById(\"app\").oncontextmenu = (e) => {\r\n            e.preventDefault();\r\n        };\r\n    }, []);\r\n    /* eslint-enable */\r\n    const [currentCollection, currentCollectionUpdater] = useState(null);\r\n    const [newColMaking, newColMakingUpdater] = useState(false);\r\n\r\n    const initNewCollection1 = () => {\r\n        newColMakingUpdater(true);\r\n    };\r\n    const addToCollections = ({ name, content }) => {\r\n        // let occ = 0;\r\n        // let name1 = name;\r\n        // while (data.map((e) => e.name).includes(name1)) {\r\n        //     occ++;\r\n        //     name1 = name + \"_\" + occ;\r\n        //     if (occ > 100) break;\r\n        // }\r\n        // if (occ > 100) return;\r\n        const newData = {\r\n            name: name,\r\n            content,\r\n        };\r\n        const updatedData = [newData, ...data];\r\n        dataUpdater(updatedData);\r\n    };\r\n    useEffect(() => {\r\n        if (!isDev) {\r\n            /* eslint-disable */\r\n            chrome.storage.local.set({ collections: data });\r\n            /* eslint-enable */\r\n        }\r\n    }, [data]);\r\n    useEffect(() => {\r\n        if (theme === \"dark\") {\r\n            document.body.classList.remove(\"lightTheme\");\r\n            document.body.classList.add(\"darkTheme\");\r\n        }\r\n        if (theme === \"light\") {\r\n            document.body.classList.remove(\"darkTheme\");\r\n            document.body.classList.add(\"lightTheme\");\r\n        }\r\n        if (!isDev) {\r\n            /* eslint-disable */\r\n            chrome.storage.local.set({ theme });\r\n            /* eslint-enable */\r\n        }\r\n    }, [theme]);\r\n    const addLinkToCollection = ({ colIndex, link, title, cover }) => {\r\n        let newContentItem = {\r\n            type: \"link\",\r\n            title: title || \"title\",\r\n            cover: cover || \"\",\r\n            href: link,\r\n        };\r\n        data[colIndex].content.unshift(newContentItem);\r\n        dataUpdater([...data]);\r\n    };\r\n    const removeCollections = (indexes) => {\r\n        if (data.length < Math.max(...indexes)) return;\r\n        let newData = [...data].filter((e, i) => {\r\n            return !indexes.includes(i);\r\n        });\r\n        dataUpdater(newData);\r\n    };\r\n    const removeLinkFromCollection = (colIndex, indexes) => {\r\n        if (data.length < colIndex) return;\r\n        if (data[colIndex].content.length < Math.max(...indexes)) return;\r\n        let newData = [...data];\r\n        newData[colIndex].content = newData[colIndex].content.filter((e, i) => {\r\n            return !indexes.includes(i);\r\n        });\r\n        dataUpdater(newData);\r\n    };\r\n    const initNewCollection2 = () => {\r\n        let content = [];\r\n        //eslint-disable-next-line\r\n        chrome.tabs.query({ currentWindow: true }).then((tabs) => {\r\n            tabs.forEach((e) => {\r\n                content.push({\r\n                    type: \"link\",\r\n                    href: e.url,\r\n                    title: e.title,\r\n                    cover: e.favIconUrl,\r\n                });\r\n            });\r\n            data.unshift({\r\n                name: new Date().toUTCString(),\r\n                cover: \"\",\r\n                content,\r\n            });\r\n            dataUpdater([...data]);\r\n        });\r\n    };\r\n    const editCollection = (e) => {\r\n        if (e.type === \"rename\") {\r\n            // let index;\r\n            // let occ = 0;\r\n            // data.forEach((i, j) => {\r\n            //     if (i.name === e.oldName) {\r\n            //         index = j;\r\n            //         occ++;\r\n            //     }\r\n            // });\r\n            // if (occ > 1) return;\r\n            data[e.index].name = e.name;\r\n            dataUpdater(data);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {newColMaking === true ? (\r\n                <CollectionView\r\n                    isNew={true}\r\n                    newColMakingUpdater={newColMakingUpdater}\r\n                    collection={null}\r\n                    currentCollection={currentCollection}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    editCollection={editCollection}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    addToCollections={addToCollections}\r\n                    addLinkToCollection={addLinkToCollection}\r\n                    removeLinkFromCollection={removeLinkFromCollection}\r\n                    theme={theme}\r\n                    themeUpdater={themeUpdater}\r\n                />\r\n            ) : currentCollection === null ? (\r\n                <Collections\r\n                    collectionData={data}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    removeCollections={removeCollections}\r\n                    theme={theme}\r\n                    themeUpdater={themeUpdater}\r\n                />\r\n            ) : (\r\n                <CollectionView\r\n                    isNew={false}\r\n                    newColMakingUpdater={newColMakingUpdater}\r\n                    collection={data[currentCollection]}\r\n                    currentCollection={currentCollection}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    editCollection={editCollection}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    addLinkToCollection={addLinkToCollection}\r\n                    removeLinkFromCollection={removeLinkFromCollection}\r\n                    theme={theme}\r\n                    themeUpdater={themeUpdater}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"app\")\n);\n//todo: add option to excule cover pic;\n"],"sourceRoot":""}