{"version":3,"sources":["components/CheckBox.jsx","components/CollectionItem.jsx","components/TopBar.jsx","components/Collections.jsx","components/CollectionContentItem.jsx","components/CollectionView.jsx","App.js","index.js"],"names":["CheckBox","React","forwardRef","props","checkboxRef","onClick","e","stopPropagation","className","type","ref","xmlns","height","viewBox","width","fill","d","CollectionItem","name","total","openCollection","collectionContextMenu","removeCollections","addToSelected","removeFromSelected","addLinkToCollection","onCollectionDrag","indexNumber","useRef","useState","checkboxState","checkboxStateUpdater","useEffect","current","addEventListener","state","target","checked","data-checked","tabIndex","data-index","onContextMenu","preventDefault","draggable","onDragStart","chrome","tabs","query","active","currentWindow","then","tab","colIndex","link","url","title","cover","favIconUrl","TopBar","main","goBack","isNewCollection","newColMakingUpdater","currentCollection","addToCollections","editCollection","currentCollectionUpdater","theme","themeUpdater","undefined","inputRef","focus","Options","enableBackground","create","app","getDetails","id","window","close","defaultValue","onKeyDown","key","blur","onBlur","value","content","index","Collections","collectionData","changeCollectionIndex","newCollection1","newCollection2","mainContRef","collectionRef","contextMenu","dragIndicatorRef","contextMenuState","contextMenuStateUpdater","isDragging","isDraggingUpdater","draggingIndex","draggingIndexUpdater","draggingOverIndex","draggingOverIndexUpdater","canOpenCollection","canOpenCollectionUpdater","contextMenuSelectedIndex","contextMenuSelectedIndexUpdater","x","clientX","offsetWidth","y","clientY","document","body","offsetHeight","style","left","top","selectedCollection","selectedCollectionUpdater","includes","filter","length","path","deSelectAll","children","forEach","lastElementChild","firstElementChild","dispatchEvent","Event","PromptConfirm","PromptConfirmMaker","collectionDrag","display","nameElem","querySelector","innerHTML","pageX","offsetLeft","pageY","offsetTop","getcollectionItem","elem","parent","parentElement","classList","contains","collectionDragging","lineElem","elemUnderMouse","elementFromPoint","parseInt","getAttribute","isNaN","data-state","role","navigator","clipboard","writeText","JSON","stringify","map","href","links","windows","incognito","msg","callback","onMouseMove","onMouseUp","setTimeout","onMouseLeave","i","CollectionContentItem","displayImg","linkContextMenu","removeLinkFromCollection","filterMeta","onLinkDrag","coverUpdater","fetchImg","a","fetch","res","ok","text","data","imgUrl","status","startsWith","update","onMouseDown","button","src","alt","CollectionView","collection","isNew","changeLinkIndex","collectionViewRef","selectedLink","selectedLinkUpdater","parser","DOMParser","head","startPoint","search","endPoint","parsedHead","parseFromString","metaImgTag","addLink","which","linkDrag","getLinkItem","linkDragging","linkDragEnd","App","dataUpdater","storage","local","get","collections","set","getElementById","oncontextmenu","newColMaking","initNewCollection1","remove","add","newContentItem","unshift","indexes","Math","max","newData","initNewCollection2","push","Date","toString","split","updatedData","index1","index2","splice","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.551ff99e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CheckBox = React.forwardRef((props, checkboxRef) => {\r\n    return (\r\n        <label\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n            }}\r\n            className=\"inputCheckboxCont\"\r\n        >\r\n            <input type=\"checkbox\" ref={checkboxRef} />\r\n            <span className=\"inputCheckbox\">\r\n                <span className=\"check\">\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                        fill=\"#FFFFFF\"\r\n                    >\r\n                        <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\r\n                    </svg>\r\n                </span>\r\n            </span>\r\n        </label>\r\n    );\r\n});\r\n\r\nexport default CheckBox;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\nconst CollectionItem = ({\r\n    name,\r\n    total,\r\n    openCollection,\r\n    removeCollections,\r\n    collectionContextMenu,\r\n    addToSelected,\r\n    removeFromSelected,\r\n    addLinkToCollection,\r\n    onCollectionDrag,\r\n    indexNumber,\r\n}) => {\r\n    const checkboxRef = useRef(null);\r\n    const [checkboxState, checkboxStateUpdater] = useState(false);\r\n    useEffect(() => {\r\n        checkboxRef.current.addEventListener(\"change\", (e) => {\r\n            let state = e.target.checked;\r\n            checkboxStateUpdater(state);\r\n        });\r\n    }, []);\r\n    //try making change inside checkbox\r\n    useEffect(() => {\r\n        if (checkboxState === true) addToSelected(indexNumber);\r\n        if (checkboxState === false) removeFromSelected(indexNumber);\r\n    }, [checkboxState]);\r\n    return (\r\n        <div\r\n            className=\"collectionItem\"\r\n            data-checked={checkboxState}\r\n            tabIndex=\"0\"\r\n            data-index={indexNumber}\r\n            onClick={() => {\r\n                openCollection(indexNumber);\r\n            }}\r\n            onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                collectionContextMenu(e, indexNumber);\r\n            }}\r\n            draggable\r\n            onDragStart={(e) => {\r\n                e.preventDefault();\r\n                onCollectionDrag(e, indexNumber);\r\n            }}\r\n        >\r\n            <div className=\"addCurrent\">\r\n                <button\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        //eslint-disable-next-line\r\n                        chrome.tabs\r\n                            .query({\r\n                                active: true,\r\n                                currentWindow: true,\r\n                            })\r\n                            .then((tabs) => {\r\n                                const tab = tabs[0];\r\n                                addLinkToCollection({\r\n                                    colIndex: indexNumber,\r\n                                    link: tab.url,\r\n                                    title: tab.title,\r\n                                    cover: tab.favIconUrl,\r\n                                });\r\n                            });\r\n                    }}\r\n                >\r\n                    +\r\n                </button>\r\n            </div>\r\n            <div className=\"info\">\r\n                <span className=\"name\" title={name}>\r\n                    {name || \"ddddd\"}\r\n                </span>\r\n                <span className=\"total\">\r\n                    {total\r\n                        ? total > 1\r\n                            ? total + \" Items\"\r\n                            : total + \" item\"\r\n                        : \"0 Item\"}\r\n                </span>\r\n            </div>\r\n            <div className=\"options\">\r\n                <CheckBox ref={checkboxRef} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CollectionItem;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst TopBar = ({\r\n    main,\r\n    name,\r\n    goBack,\r\n    isNewCollection,\r\n    newColMakingUpdater,\r\n    currentCollection,\r\n    addToCollections,\r\n    editCollection,\r\n    currentCollectionUpdater,\r\n    theme,\r\n    themeUpdater,\r\n}) => {\r\n    isNewCollection = isNewCollection === undefined ? false : isNewCollection;\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n        if (isNewCollection) inputRef.current.focus();\r\n    }, [isNewCollection]);\r\n\r\n    const Options = (\r\n        <div className=\"options\">\r\n            <button\r\n                className=\"switchTheme\"\r\n                onClick={() => {\r\n                    if (theme === \"dark\") return themeUpdater(\"light\");\r\n                    if (theme === \"light\") return themeUpdater(\"dark\");\r\n                }}\r\n            >\r\n                {theme === \"dark\" ? (\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        enableBackground=\"new 0 0 24 24\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                    >\r\n                        <path d=\"M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0 c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2 c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1 C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06 c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41 l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41 c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36 c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z\" />\r\n                    </svg>\r\n                ) : (\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        enableBackground=\"new 0 0 24 24\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                    >\r\n                        <path d=\"M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36c-0.98,1.37-2.58,2.26-4.4,2.26 c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z\" />\r\n                    </svg>\r\n                )}\r\n            </button>\r\n            {main ? (\r\n                <button\r\n                    className=\"github\"\r\n                    onClick={() => {\r\n                        /* eslint-disable */\r\n                        chrome.tabs.create({\r\n                            url: \"https://github.com/mienaiyami/collections-chrome-extension\",\r\n                        });\r\n                        /* eslint-enable */\r\n                    }}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 30 30\"\r\n                        width=\"24px\"\r\n                        height=\"24px\"\r\n                    >\r\n                        <path d=\"M15,3C8.373,3,3,8.373,3,15c0,5.623,3.872,10.328,9.092,11.63C12.036,26.468,12,26.28,12,26.047v-2.051 c-0.487,0-1.303,0-1.508,0c-0.821,0-1.551-0.353-1.905-1.009c-0.393-0.729-0.461-1.844-1.435-2.526 c-0.289-0.227-0.069-0.486,0.264-0.451c0.615,0.174,1.125,0.596,1.605,1.222c0.478,0.627,0.703,0.769,1.596,0.769 c0.433,0,1.081-0.025,1.691-0.121c0.328-0.833,0.895-1.6,1.588-1.962c-3.996-0.411-5.903-2.399-5.903-5.098 c0-1.162,0.495-2.286,1.336-3.233C9.053,10.647,8.706,8.73,9.435,8c1.798,0,2.885,1.166,3.146,1.481C13.477,9.174,14.461,9,15.495,9 c1.036,0,2.024,0.174,2.922,0.483C18.675,9.17,19.763,8,21.565,8c0.732,0.731,0.381,2.656,0.102,3.594 c0.836,0.945,1.328,2.066,1.328,3.226c0,2.697-1.904,4.684-5.894,5.097C18.199,20.49,19,22.1,19,23.313v2.734 c0,0.104-0.023,0.179-0.035,0.268C23.641,24.676,27,20.236,27,15C27,8.373,21.627,3,15,3z\" />\r\n                    </svg>\r\n                </button>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            <button\r\n                className=\"openFull\"\r\n                onClick={() => {\r\n                    /* eslint-disable */\r\n                    chrome.tabs.create({\r\n                        url:\r\n                            \"chrome-extension://\" +\r\n                            chrome.app.getDetails().id +\r\n                            \"/index.html\",\r\n                    });\r\n                    /* eslint-enable */\r\n                }}\r\n            >\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    height=\"24px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                >\r\n                    <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\r\n                </svg>\r\n            </button>\r\n            <button className=\"close\" onClick={() => window.close()}>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    height=\"24px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                >\r\n                    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {main ? (\r\n                <div id=\"topbar\">\r\n                    <h2>Collections</h2>\r\n                    {Options}\r\n                </div>\r\n            ) : (\r\n                <div id=\"topbar\">\r\n                    <button className=\"goback\" onClick={goBack}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            height=\"24px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            width=\"24px\"\r\n                        >\r\n                            <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\" />\r\n                        </svg>\r\n                    </button>\r\n                    <h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            ref={inputRef}\r\n                            defaultValue={name || \"New Collection\"}\r\n                            onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\") e.target.blur();\r\n                            }}\r\n                            onBlur={(e) => {\r\n                                if (isNewCollection) {\r\n                                    if (e.target.value === \"\")\r\n                                        newColMakingUpdater(false);\r\n                                }\r\n                                if (e.target.value === \"\")\r\n                                    return (e.target.value = name);\r\n                                if (!isNewCollection)\r\n                                    return editCollection({\r\n                                        type: \"rename\",\r\n                                        index: currentCollection,\r\n                                        name: e.target.value,\r\n                                    });\r\n                                if (isNewCollection) {\r\n                                    addToCollections({\r\n                                        name: e.target.value,\r\n                                        content: [],\r\n                                    });\r\n                                    newColMakingUpdater(false);\r\n                                    currentCollectionUpdater(0);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h2>\r\n                    {Options}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport CollectionItem from \"./CollectionItem\";\r\nimport TopBar from \"./TopBar\";\r\n\r\nconst Collections = ({\r\n    collectionData,\r\n    removeCollections,\r\n    changeCollectionIndex,\r\n    currentCollectionUpdater,\r\n    newCollection1,\r\n    newCollection2,\r\n    addLinkToCollection,\r\n    theme,\r\n    themeUpdater,\r\n}) => {\r\n    const mainContRef = useRef(null);\r\n    const collectionRef = useRef(null);\r\n    const contextMenu = useRef(null);\r\n    const dragIndicatorRef = useRef(null);\r\n    const [contextMenuState, contextMenuStateUpdater] = useState(\"closed\");\r\n    const [isDragging, isDraggingUpdater] = useState(false);\r\n    const [draggingIndex, draggingIndexUpdater] = useState(null);\r\n    const [draggingOverIndex, draggingOverIndexUpdater] = useState(null);\r\n    const [canOpenCollection, canOpenCollectionUpdater] = useState(true);\r\n    const [contextMenuSelectedIndex, contextMenuSelectedIndexUpdater] =\r\n        useState(null);\r\n    const collectionContextMenu = (e, index) => {\r\n        if (contextMenu.current !== null) {\r\n            let x =\r\n                e.clientX >\r\n                mainContRef.current.offsetWidth -\r\n                    contextMenu.current.offsetWidth\r\n                    ? mainContRef.current.offsetWidth -\r\n                      contextMenu.current.offsetWidth -\r\n                      30\r\n                    : e.clientX;\r\n            let y =\r\n                e.clientY >\r\n                document.body.offsetHeight - contextMenu.current.offsetHeight\r\n                    ? document.body.offsetHeight -\r\n                      contextMenu.current.offsetHeight -\r\n                      30\r\n                    : e.clientY;\r\n            contextMenuSelectedIndexUpdater(index);\r\n            contextMenu.current.style.left = x + \"px\";\r\n            contextMenu.current.style.top = y + \"px\";\r\n        }\r\n        contextMenuStateUpdater(\"opened\");\r\n    };\r\n    const openCollection = (index) => {\r\n        if (!isDragging && canOpenCollection) {\r\n            currentCollectionUpdater(index);\r\n        }\r\n    };\r\n    const [selectedCollection, selectedCollectionUpdater] = useState([]);\r\n    const addToSelected = (index) => {\r\n        if (selectedCollection.includes(index)) return;\r\n        selectedCollectionUpdater([...selectedCollection, index]);\r\n    };\r\n    const removeFromSelected = (index) => {\r\n        if (selectedCollection.includes(index)) {\r\n            selectedCollectionUpdater([\r\n                ...selectedCollection.filter((e) => e !== index),\r\n            ]);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (selectedCollection.length > 0) {\r\n        }\r\n    }, [selectedCollection]);\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", (e) => {\r\n            if (\r\n                contextMenu !== null &&\r\n                e.target !== contextMenu.current &&\r\n                !e.path.includes(contextMenu.current)\r\n            ) {\r\n                contextMenuStateUpdater(\"closed\");\r\n            }\r\n        });\r\n    }, []);\r\n    const deSelectAll = () => {\r\n        selectedCollectionUpdater([]);\r\n        [...collectionRef.current?.children].forEach((e) => {\r\n            e.lastElementChild.firstElementChild.firstElementChild.checked = false;\r\n            e.lastElementChild.firstElementChild.firstElementChild.dispatchEvent(\r\n                new Event(\"change\")\r\n            );\r\n        });\r\n    };\r\n    const [PromptConfirm, PromptConfirmMaker] = useState(\"\");\r\n    const promptConfirm = (msg, callback) => {\r\n        PromptConfirmMaker(\r\n            <div className=\"promptConfirmCont\">\r\n                <div className=\"prompt\">\r\n                    <div className=\"msg\">{msg}</div>\r\n                    <div className=\"option\">\r\n                        <button\r\n                            onClick={() => {\r\n                                callback();\r\n                                PromptConfirmMaker(\"\");\r\n                            }}\r\n                            className=\"warn\"\r\n                        >\r\n                            Confirm\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                PromptConfirmMaker(\"\");\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    const collectionDrag = (e, index) => {\r\n        isDraggingUpdater(true);\r\n        draggingIndexUpdater(index);\r\n        dragIndicatorRef.current.style.display = \"flex\";\r\n        const nameElem = dragIndicatorRef.current.querySelector(\".name\");\r\n        nameElem.innerHTML = collectionData[index].name;\r\n        if (\r\n            e.pageX - mainContRef.current.offsetLeft >=\r\n            mainContRef.current.offsetWidth - nameElem.offsetWidth - 20\r\n        ) {\r\n            nameElem.style.left =\r\n                mainContRef.current.offsetWidth -\r\n                nameElem.offsetWidth -\r\n                20 +\r\n                \"px\";\r\n        } else {\r\n            nameElem.style.left =\r\n                e.pageX - mainContRef.current.offsetLeft + 20 + \"px\";\r\n        }\r\n        nameElem.style.top =\r\n            e.pageY - mainContRef.current.offsetTop + 20 + \"px\";\r\n        const lineElem = dragIndicatorRef.current.querySelector(\".line\");\r\n        lineElem.style.top =\r\n            collectionRef.current.offsetTop +\r\n            collectionRef.current.children[index].offsetTop -\r\n            5 +\r\n            \"px\";\r\n    };\r\n    const getcollectionItem = (elem) => {\r\n        let parent = elem.parentElement;\r\n        if (\r\n            !parent.classList.contains(\"collectionItem\") &&\r\n            ![\"collections\", \"main\", \"app\"].includes(parent.id) &&\r\n            parent !== document.body\r\n        ) {\r\n            parent = getcollectionItem(parent);\r\n        }\r\n        return parent;\r\n    };\r\n    const collectionDragging = (e) => {\r\n        const nameElem = dragIndicatorRef.current.querySelector(\".name\");\r\n        if (\r\n            e.pageX - mainContRef.current.offsetLeft >=\r\n            mainContRef.current.offsetWidth - nameElem.offsetWidth - 40\r\n        ) {\r\n            nameElem.style.left =\r\n                mainContRef.current.offsetWidth -\r\n                nameElem.offsetWidth -\r\n                20 +\r\n                \"px\";\r\n        } else {\r\n            nameElem.style.left =\r\n                e.pageX - mainContRef.current.offsetLeft + 20 + \"px\";\r\n        }\r\n        nameElem.style.top =\r\n            e.pageY - mainContRef.current.offsetTop + 20 + \"px\";\r\n        const lineElem = dragIndicatorRef.current.querySelector(\".line\");\r\n        const elemUnderMouse = document.elementFromPoint(e.pageX, e.pageY);\r\n        let index = draggingOverIndex;\r\n        if (\r\n            !elemUnderMouse?.classList?.contains(\"collectionItem\") &&\r\n            elemUnderMouse !== collectionRef.current &&\r\n            elemUnderMouse !== dragIndicatorRef.current &&\r\n            elemUnderMouse !== nameElem &&\r\n            elemUnderMouse !== lineElem\r\n        ) {\r\n            index = parseInt(\r\n                getcollectionItem(elemUnderMouse).getAttribute(\"data-index\")\r\n            );\r\n        }\r\n        if (elemUnderMouse?.classList?.contains(\"collectionItem\"))\r\n            index = parseInt(elemUnderMouse.getAttribute(\"data-index\"));\r\n        if (index !== null && !isNaN(index)) {\r\n            draggingOverIndexUpdater(parseInt(index));\r\n            lineElem.style.top =\r\n                collectionRef.current.children[index].offsetTop +\r\n                collectionRef.current.offsetTop -\r\n                5 +\r\n                \"px\";\r\n        }\r\n    };\r\n    const collectionDragEnd = (e) => {\r\n        dragIndicatorRef.current.style.display = \"none\";\r\n        const nameElem = dragIndicatorRef.current.querySelector(\".name\");\r\n        nameElem.innerHTML = \"\";\r\n        if (draggingIndex !== draggingOverIndex)\r\n            changeCollectionIndex(draggingIndex, draggingOverIndex);\r\n        isDraggingUpdater(false);\r\n        draggingIndexUpdater(null);\r\n        draggingOverIndexUpdater(null);\r\n        canOpenCollectionUpdater(false);\r\n        setTimeout(() => {\r\n            canOpenCollectionUpdater(true);\r\n        }, 500);\r\n    };\r\n    const cancelDrag = () => {\r\n        dragIndicatorRef.current.style.display = \"none\";\r\n        const nameElem = dragIndicatorRef.current.querySelector(\".name\");\r\n        nameElem.innerHTML = \"\";\r\n        isDraggingUpdater(false);\r\n        draggingIndexUpdater(null);\r\n        draggingOverIndexUpdater(null);\r\n    };\r\n    return (\r\n        <>\r\n            <TopBar\r\n                main={true}\r\n                name=\"Collections\"\r\n                currentCollectionUpdater={currentCollectionUpdater}\r\n                theme={theme}\r\n                themeUpdater={themeUpdater}\r\n            />\r\n            <div id=\"main\" ref={mainContRef}>\r\n                <div className=\"dragIndicator\" ref={dragIndicatorRef}>\r\n                    <span className=\"name\"></span>\r\n                    <span className=\"line\"></span>\r\n                </div>\r\n                <div\r\n                    className=\"contextMenu\"\r\n                    ref={contextMenu}\r\n                    data-state={contextMenuState}\r\n                    onClick={() => {\r\n                        contextMenuStateUpdater(\"closed\");\r\n                    }}\r\n                >\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            removeCollections([contextMenuSelectedIndex]);\r\n                        }}\r\n                    >\r\n                        Remove Collection\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            navigator.clipboard.writeText(\r\n                                JSON.stringify(\r\n                                    collectionData[contextMenuSelectedIndex]\r\n                                        .content\r\n                                )\r\n                            );\r\n                        }}\r\n                    >\r\n                        Copy Links(JSON)\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null) {\r\n                                let links = collectionData[\r\n                                    contextMenuSelectedIndex\r\n                                ].content.map((e) => e.href);\r\n                                links.forEach((link) => {\r\n                                    chrome.tabs.create({\r\n                                        url: link,\r\n                                        active: false,\r\n                                    }); /* eslint-enable */\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        Open All\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            let links = collectionData[\r\n                                contextMenuSelectedIndex\r\n                            ].content.map((e) => e.href);\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open All in new window\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            let links = collectionData[\r\n                                contextMenuSelectedIndex\r\n                            ].content.map((e) => e.href);\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open All in incognito window\r\n                    </li>\r\n                </div>\r\n                <div className=\"collectionOptions\">\r\n                    <div\r\n                        className=\"deleteSelected\"\r\n                        style={\r\n                            selectedCollection.length === 0\r\n                                ? { display: \"none\" }\r\n                                : { display: \"flex\" }\r\n                        }\r\n                    >\r\n                        <span className=\"selectedInfo\">\r\n                            {selectedCollection.length} selected\r\n                        </span>\r\n                        <span className=\"options\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    // removeCollections(selectedCollection);\r\n                                    // deSelectAll();\r\n                                    promptConfirm(\r\n                                        \"Are you sure you want to delete \" +\r\n                                            selectedCollection.length +\r\n                                            \" collections\",\r\n                                        () => {\r\n                                            removeCollections(\r\n                                                selectedCollection\r\n                                            );\r\n                                            deSelectAll();\r\n                                        }\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    height=\"24px\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    width=\"24px\"\r\n                                    fill=\"#FFFFFF\"\r\n                                >\r\n                                    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n                                </svg>\r\n                            </button>\r\n                            <button onClick={deSelectAll}>\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    height=\"24px\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    width=\"24px\"\r\n                                    fill=\"#FFFFFF\"\r\n                                >\r\n                                    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                                </svg>\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                    <div\r\n                        className=\"createNew\"\r\n                        style={\r\n                            selectedCollection.length === 0\r\n                                ? { display: \"flex\" }\r\n                                : { display: \"none\" }\r\n                        }\r\n                    >\r\n                        <button className=\"newEmpty\" onClick={newCollection1}>\r\n                            Create New Collection\r\n                        </button>\r\n                        <button className=\"newFromAll\" onClick={newCollection2}>\r\n                            Create New Collection from All Opened tabs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    id=\"collections\"\r\n                    ref={collectionRef}\r\n                    className=\"collection-view\"\r\n                    onMouseMove={(e) => {\r\n                        if (isDragging && draggingIndex !== null) {\r\n                            collectionDragging(e);\r\n                        }\r\n                    }}\r\n                    onMouseUp={(e) => {\r\n                        if (isDragging && draggingIndex !== null) {\r\n                            collectionDragEnd(e);\r\n                        }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                        if (isDragging && draggingIndex !== null) {\r\n                            cancelDrag();\r\n                        }\r\n                    }}\r\n                >\r\n                    {collectionData === null ? (\r\n                        <p>No Collection</p>\r\n                    ) : collectionData.length === 0 ? (\r\n                        <p>No Collection</p>\r\n                    ) : (\r\n                        collectionData.map((e, i) => (\r\n                            <CollectionItem\r\n                                key={e.name + i}\r\n                                name={e.name}\r\n                                total={e.content.length}\r\n                                indexNumber={i}\r\n                                openCollection={openCollection}\r\n                                removeCollections={removeCollections}\r\n                                collectionContextMenu={collectionContextMenu}\r\n                                addToSelected={addToSelected}\r\n                                removeFromSelected={removeFromSelected}\r\n                                addLinkToCollection={addLinkToCollection}\r\n                                onCollectionDrag={collectionDrag}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {PromptConfirm}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Collections;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nconst CollectionContentItem = ({\r\n    title,\r\n    href,\r\n    displayImg,\r\n    removeLinkFromCollection,\r\n    currentCollection,\r\n    linkContextMenu,\r\n    addToSelected,\r\n    removeFromSelected,\r\n    indexNumber,\r\n    filterMeta,\r\n    onLinkDrag,\r\n}) => {\r\n    const checkboxRef = useRef(null);\r\n    const [checkboxState, checkboxStateUpdater] = useState(false);\r\n    const [cover, coverUpdater] = useState(\"\");\r\n    const fetchImg = async (url) => {\r\n        const res = await fetch(url);\r\n        if (res.ok) {\r\n            res.text().then((data) => {\r\n                filterMeta(data).then((imgUrl) => {\r\n                    if (imgUrl === \"\") imgUrl = displayImg;\r\n                    coverUpdater(imgUrl);\r\n                });\r\n            });\r\n        }\r\n        if (res.status === 429) {\r\n            setTimeout(() => {\r\n                fetchImg(url);\r\n            }, 1000);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        checkboxRef.current.addEventListener(\"change\", (e) => {\r\n            let state = e.target.checked;\r\n            checkboxStateUpdater(state);\r\n        });\r\n        if (href.startsWith(\"http\")) fetchImg(href);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (checkboxState === true) addToSelected(indexNumber);\r\n        if (checkboxState === false) removeFromSelected(indexNumber);\r\n    }, [checkboxState]);\r\n\r\n    return (\r\n        <div\r\n            className=\"collectionContentItem collectionItem\"\r\n            tabIndex=\"0\"\r\n            data-index={indexNumber}\r\n            data-checked={checkboxState}\r\n            onClick={() => {\r\n                /* eslint-disable */\r\n                chrome.tabs.update({ url: href });\r\n                /* eslint-enable */\r\n            }}\r\n            onMouseDown={(e) => {\r\n                if (e.button === 1) {\r\n                    /* eslint-disable */\r\n                    e.preventDefault();\r\n                    chrome.tabs.create({ url: href, active: false });\r\n                    /* eslint-enable */\r\n                }\r\n            }}\r\n            onContextMenu={(e) => {\r\n                linkContextMenu(e, indexNumber);\r\n            }}\r\n            draggable\r\n            onDragStart={(e) => {\r\n                e.preventDefault();\r\n                onLinkDrag(e, indexNumber);\r\n            }}\r\n        >\r\n            <div className=\"cover\">\r\n                <img src={cover || \"\"} alt=\"Img\" />\r\n            </div>\r\n            <div className=\"info\">\r\n                <span className=\"name\" title={title}>\r\n                    {title || \"ddddd\"}\r\n                </span>\r\n                <span className=\"link\" title={href}>\r\n                    {href || \"\"}\r\n                </span>\r\n            </div>\r\n            <div className=\"options\">\r\n                <CheckBox ref={checkboxRef} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CollectionContentItem;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport CollectionContentItem from \"./CollectionContentItem\";\r\nimport TopBar from \"./TopBar\";\r\n\r\nconst CollectionView = ({\r\n    collection,\r\n    currentCollection,\r\n    currentCollectionUpdater,\r\n    isNew,\r\n    newColMakingUpdater,\r\n    newCollection1,\r\n    newCollection2,\r\n    addToCollections,\r\n    editCollection,\r\n    addLinkToCollection,\r\n    removeLinkFromCollection,\r\n    theme,\r\n    themeUpdater,\r\n    changeLinkIndex,\r\n}) => {\r\n    const goBack = () => {\r\n        currentCollectionUpdater(null);\r\n        if (isNew) newColMakingUpdater(false);\r\n    };\r\n    const mainContRef = useRef(null);\r\n    const collectionViewRef = useRef(null);\r\n    const contextMenu = useRef(null);\r\n    const dragIndicatorRef = useRef(null);\r\n    const [contextMenuState, contextMenuStateUpdater] = useState(\"closed\");\r\n    const [isDragging, isDraggingUpdater] = useState(false);\r\n    const [draggingIndex, draggingIndexUpdater] = useState(null);\r\n    const [draggingOverIndex, draggingOverIndexUpdater] = useState(null);\r\n    const [canOpenCollection, canOpenCollectionUpdater] = useState(true);\r\n    const [contextMenuSelectedIndex, contextMenuSelectedIndexUpdater] =\r\n        useState(null);\r\n    const linkContextMenu = (e, index) => {\r\n        if (contextMenu.current !== null) {\r\n            let x =\r\n                e.clientX >\r\n                mainContRef.current.offsetWidth -\r\n                    contextMenu.current.offsetWidth\r\n                    ? mainContRef.current.offsetWidth -\r\n                      contextMenu.current.offsetWidth -\r\n                      30\r\n                    : e.clientX;\r\n            let y =\r\n                e.clientY >\r\n                document.body.offsetHeight - contextMenu.current.offsetHeight\r\n                    ? document.body.offsetHeight -\r\n                      contextMenu.current.offsetHeight -\r\n                      30\r\n                    : e.clientY;\r\n            contextMenuSelectedIndexUpdater(index);\r\n            contextMenu.current.style.left = x + \"px\";\r\n            contextMenu.current.style.top = y + \"px\";\r\n        }\r\n        contextMenuStateUpdater(\"opened\");\r\n    };\r\n    const [selectedLink, selectedLinkUpdater] = useState([]);\r\n    const addToSelected = (index) => {\r\n        if (selectedLink.includes(index)) return;\r\n        selectedLinkUpdater([...selectedLink, index]);\r\n    };\r\n    const removeFromSelected = (index) => {\r\n        if (selectedLink.includes(index)) {\r\n            selectedLinkUpdater([...selectedLink.filter((e) => e !== index)]);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (selectedLink.length > 0) {\r\n        }\r\n    }, [selectedLink]);\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", (e) => {\r\n            if (\r\n                contextMenu !== null &&\r\n                e.target !== contextMenu.current &&\r\n                !e.path.includes(contextMenu.current)\r\n            ) {\r\n                contextMenuStateUpdater(\"closed\");\r\n            }\r\n        });\r\n    }, []);\r\n    const deSelectAll = () => {\r\n        selectedLinkUpdater([]);\r\n        [...collectionViewRef.current?.children].forEach((e) => {\r\n            e.lastElementChild.firstElementChild.firstElementChild.checked = false;\r\n            e.lastElementChild.firstElementChild.firstElementChild.dispatchEvent(\r\n                new Event(\"change\")\r\n            );\r\n        });\r\n    };\r\n    const parser = new DOMParser();\r\n    const filterMeta = async (data) => {\r\n        let head = \"\";\r\n        let startPoint = data.search(/<head.*?<\\/head>/gi);\r\n        let endPoint = data.search(/<\\/head>/);\r\n        for (let i = startPoint; i < endPoint; i++) {\r\n            head += data[i];\r\n        }\r\n        head += \"</head>\";\r\n        const parsedHead = parser.parseFromString(head, \"text/html\");\r\n        // const meta = parsedHead.head.getElementsByTagName(\"meta\");\r\n        const metaImgTag =\r\n            parsedHead.querySelector(\"meta[property='og:image']\") ||\r\n            parsedHead.querySelector(\"meta[name='og:image']\");\r\n        let imgUrl = metaImgTag ? metaImgTag.getAttribute(\"content\") : \"\";\r\n        return imgUrl;\r\n    };\r\n    const addLink = (which, e) => {\r\n        if (which === \"current\") {\r\n            //eslint-disable-next-line\r\n            chrome.tabs\r\n                .query({\r\n                    active: true,\r\n                    currentWindow: true,\r\n                })\r\n                .then((tabs) => {\r\n                    const tab = tabs[0];\r\n                    addLinkToCollection({\r\n                        colIndex: isNew ? 0 : currentCollection,\r\n                        link: tab.url,\r\n                        title: tab.title,\r\n                        cover: tab.favIconUrl,\r\n                    });\r\n                });\r\n        }\r\n        if (which === \"all\") {\r\n            //eslint-disable-next-line\r\n            chrome.tabs\r\n                .query({\r\n                    currentWindow: true,\r\n                })\r\n                .then((tabs) => {\r\n                    for (let i = tabs.length - 1; i >= 0; i--) {\r\n                        addLinkToCollection({\r\n                            colIndex: currentCollection,\r\n                            link: tabs[i].url,\r\n                            title: tabs[i].title,\r\n                            cover: tabs[i].favIconUrl,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n    const linkDrag = (e, index) => {\r\n        isDraggingUpdater(true);\r\n        draggingIndexUpdater(index);\r\n        dragIndicatorRef.current.style.display = \"flex\";\r\n        const nameElem = dragIndicatorRef.current.querySelector(\".name\");\r\n        nameElem.innerHTML = collection.content[index].title;\r\n        if (\r\n            e.pageX - mainContRef.current.offsetLeft >=\r\n            mainContRef.current.offsetWidth - nameElem.offsetWidth - 20\r\n        ) {\r\n            nameElem.style.left =\r\n                mainContRef.current.offsetWidth -\r\n                nameElem.offsetWidth -\r\n                20 +\r\n                \"px\";\r\n        } else {\r\n            nameElem.style.left =\r\n                e.pageX - mainContRef.current.offsetLeft + 20 + \"px\";\r\n        }\r\n        nameElem.style.top =\r\n            e.pageY - mainContRef.current.offsetTop + 20 + \"px\";\r\n        const lineElem = dragIndicatorRef.current.querySelector(\".line\");\r\n        lineElem.style.top =\r\n            collectionViewRef.current.offsetTop +\r\n            collectionViewRef.current.children[index].offsetTop -\r\n            5 +\r\n            \"px\";\r\n    };\r\n    const getLinkItem = (elem) => {\r\n        let parent = elem.parentElement;\r\n        if (\r\n            !parent.classList.contains(\"collectionItem\") &&\r\n            ![\"collectionView \", \"main\", \"app\"].includes(parent.id) &&\r\n            parent !== document.body\r\n        ) {\r\n            parent = getLinkItem(parent);\r\n        }\r\n        return parent;\r\n    };\r\n    const linkDragging = (e) => {\r\n        const nameElem = dragIndicatorRef.current.querySelector(\".name\");\r\n        if (\r\n            e.pageX - mainContRef.current.offsetLeft >=\r\n            mainContRef.current.offsetWidth - nameElem.offsetWidth - 40\r\n        ) {\r\n            nameElem.style.left =\r\n                mainContRef.current.offsetWidth -\r\n                nameElem.offsetWidth -\r\n                20 +\r\n                \"px\";\r\n        } else {\r\n            nameElem.style.left =\r\n                e.pageX - mainContRef.current.offsetLeft + 20 + \"px\";\r\n        }\r\n        nameElem.style.top =\r\n            e.pageY - mainContRef.current.offsetTop + 20 + \"px\";\r\n        const lineElem = dragIndicatorRef.current.querySelector(\".line\");\r\n        const elemUnderMouse = document.elementFromPoint(e.pageX, e.pageY);\r\n        let index = draggingOverIndex;\r\n        if (\r\n            !elemUnderMouse?.classList?.contains(\"collectionItem\") &&\r\n            elemUnderMouse !== collectionViewRef.current &&\r\n            elemUnderMouse !== dragIndicatorRef.current &&\r\n            elemUnderMouse !== nameElem &&\r\n            elemUnderMouse !== lineElem\r\n        ) {\r\n            index = parseInt(\r\n                getLinkItem(elemUnderMouse).getAttribute(\"data-index\")\r\n            );\r\n        }\r\n        if (elemUnderMouse?.classList?.contains(\"collectionItem\"))\r\n            index = parseInt(elemUnderMouse.getAttribute(\"data-index\"));\r\n        if (index !== null && !isNaN(index)) {\r\n            draggingOverIndexUpdater(parseInt(index));\r\n            lineElem.style.top =\r\n                collectionViewRef.current.children[index].offsetTop +\r\n                collectionViewRef.current.offsetTop -\r\n                5 +\r\n                \"px\";\r\n        }\r\n    };\r\n    const linkDragEnd = (e) => {\r\n        dragIndicatorRef.current.style.display = \"none\";\r\n        const nameElem = dragIndicatorRef.current.querySelector(\".name\");\r\n        nameElem.innerHTML = \"\";\r\n        if (draggingIndex !== draggingOverIndex)\r\n            changeLinkIndex(\r\n                currentCollection,\r\n                draggingIndex,\r\n                draggingOverIndex\r\n            );\r\n        isDraggingUpdater(false);\r\n        draggingIndexUpdater(null);\r\n        draggingOverIndexUpdater(null);\r\n        canOpenCollectionUpdater(false);\r\n        setTimeout(() => {\r\n            canOpenCollectionUpdater(true);\r\n        }, 500);\r\n    };\r\n    let content;\r\n    content = (\r\n        <>\r\n            <TopBar\r\n                main={false}\r\n                name={collection === null ? null : collection.name}\r\n                goBack={goBack}\r\n                isNewCollection={isNew}\r\n                addToCollections={addToCollections}\r\n                newColMakingUpdater={newColMakingUpdater}\r\n                currentCollectionUpdater={currentCollectionUpdater}\r\n                editCollection={editCollection}\r\n                currentCollection={currentCollection}\r\n                theme={theme}\r\n                themeUpdater={themeUpdater}\r\n            />\r\n            <div\r\n                id=\"main\"\r\n                ref={mainContRef}\r\n                onMouseMove={(e) => {\r\n                    if (isDragging && draggingIndex !== null) {\r\n                        linkDragging(e);\r\n                    }\r\n                }}\r\n                onMouseUp={(e) => {\r\n                    if (isDragging && draggingIndex !== null) {\r\n                        linkDragEnd(e);\r\n                    }\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                    if (isDragging && draggingIndex !== null) {\r\n                        linkDragEnd(e);\r\n                    }\r\n                }}\r\n            >\r\n                <div className=\"dragIndicator\" ref={dragIndicatorRef}>\r\n                    <span className=\"name\"></span>\r\n                    <span className=\"line\"></span>\r\n                </div>\r\n                <div\r\n                    className=\"contextMenu\"\r\n                    ref={contextMenu}\r\n                    data-state={contextMenuState}\r\n                    onClick={() => {\r\n                        contextMenuStateUpdater(\"closed\");\r\n                    }}\r\n                >\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            removeLinkFromCollection(currentCollection, [\r\n                                contextMenuSelectedIndex,\r\n                            ]);\r\n                        }}\r\n                    >\r\n                        Remove Link\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                navigator.clipboard.writeText(\r\n                                    collection.content[contextMenuSelectedIndex]\r\n                                        .href\r\n                                );\r\n                        }}\r\n                    >\r\n                        Copy Link\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.tabs.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                    state: \"maximized\",\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open in new window\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open in incognito window\r\n                    </li>\r\n                </div>\r\n                <div className=\"collectionOptions\">\r\n                    <div\r\n                        className=\"deleteSelected\"\r\n                        style={\r\n                            selectedLink.length === 0\r\n                                ? { display: \"none\" }\r\n                                : { display: \"flex\" }\r\n                        }\r\n                    >\r\n                        <span className=\"selectedInfo\">\r\n                            {selectedLink.length} selected\r\n                        </span>\r\n                        <span className=\"options\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    /* eslint-disable */\r\n                                    let links = collection.content\r\n                                        .filter((e, i) =>\r\n                                            selectedLink.includes(i)\r\n                                        )\r\n                                        .map((e) => e.href);\r\n                                    links.forEach((link) => {\r\n                                        chrome.tabs.create({\r\n                                            url: link,\r\n                                            active: false,\r\n                                        }); /* eslint-enable */\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Open\r\n                            </button>\r\n                            <button\r\n                                onClick={() => {\r\n                                    /* eslint-disable */\r\n                                    let links = collection.content\r\n                                        .filter((e, i) =>\r\n                                            selectedLink.includes(i)\r\n                                        )\r\n                                        .map((e) => e.href);\r\n                                    chrome.windows.create({\r\n                                        url: links,\r\n                                        state: \"maximized\",\r\n                                        incognito: true,\r\n                                    }); /* eslint-enable */\r\n                                }}\r\n                            >\r\n                                Open Incognito\r\n                            </button>\r\n                            <button\r\n                                onClick={() => {\r\n                                    removeLinkFromCollection(\r\n                                        currentCollection,\r\n                                        selectedLink\r\n                                    );\r\n                                    deSelectAll();\r\n                                }}\r\n                            >\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    height=\"24px\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    width=\"24px\"\r\n                                    fill=\"#FFFFFF\"\r\n                                >\r\n                                    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n                                </svg>\r\n                            </button>\r\n                            <button onClick={deSelectAll}>\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    height=\"24px\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    width=\"24px\"\r\n                                    fill=\"#FFFFFF\"\r\n                                >\r\n                                    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                                </svg>\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                    <div\r\n                        className=\"createNew\"\r\n                        style={\r\n                            selectedLink.length === 0\r\n                                ? { display: \"flex\" }\r\n                                : { display: \"none\" }\r\n                        }\r\n                    >\r\n                        <button\r\n                            className=\"addCurrentLink\"\r\n                            onClick={() => addLink(\"current\")}\r\n                        >\r\n                            Add Current Tab\r\n                        </button>\r\n                        <button\r\n                            className=\"addCurrentLink\"\r\n                            onClick={() => addLink(\"all\")}\r\n                        >\r\n                            Add All opened Tabs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    id=\"collectionView \"\r\n                    className=\"collection-view\"\r\n                    ref={collectionViewRef}\r\n                >\r\n                    {collection === null ? (\r\n                        <p>No Item</p>\r\n                    ) : collection.content.length === 0 ? (\r\n                        <p>No Item</p>\r\n                    ) : (\r\n                        collection.content.map((e, i) => (\r\n                            <CollectionContentItem\r\n                                title={e.title}\r\n                                href={e.href}\r\n                                displayImg={e.cover}\r\n                                key={e.href + i}\r\n                                indexNumber={i}\r\n                                currentCollection={currentCollection}\r\n                                removeLinkFromCollection={\r\n                                    removeLinkFromCollection\r\n                                }\r\n                                linkContextMenu={linkContextMenu}\r\n                                addToSelected={addToSelected}\r\n                                removeFromSelected={removeFromSelected}\r\n                                filterMeta={filterMeta}\r\n                                onLinkDrag={linkDrag}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n    return content;\r\n};\r\n\r\nexport default CollectionView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Collections from \"./components/Collections\";\r\nimport CollectionView from \"./components/CollectionView\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\n\r\nconst App = () => {\r\n    const [data, dataUpdater] = useState([]);\r\n    const [theme, themeUpdater] = useState(\"dark\");\r\n    /* eslint-disable */\r\n    useEffect(() => {\r\n        if (isDev) {\r\n            import(\"./testdata\").then((e) => {\r\n                dataUpdater(e.default);\r\n            });\r\n        } else {\r\n            chrome.storage.local.get(\"collections\", ({ collections }) => {\r\n                if (collections === undefined) {\r\n                    dataUpdater([]);\r\n                    chrome.storage.local.set({ collections: [] }, () => {});\r\n                } else dataUpdater(collections);\r\n            });\r\n            chrome.storage.local.get(\"theme\", ({ theme }) => {\r\n                if (theme === undefined) {\r\n                    themeUpdater(\"dark\");\r\n                    chrome.storage.local.set({ theme: \"dark\" }, () => {});\r\n                } else themeUpdater(theme);\r\n            });\r\n        }\r\n        document.getElementById(\"app\").oncontextmenu = (e) => {\r\n            e.preventDefault();\r\n        };\r\n    }, []);\r\n    /* eslint-enable */\r\n    const [currentCollection, currentCollectionUpdater] = useState(null);\r\n    const [newColMaking, newColMakingUpdater] = useState(false);\r\n\r\n    const initNewCollection1 = () => {\r\n        newColMakingUpdater(true);\r\n    };\r\n    const addToCollections = ({ name, content }) => {\r\n        // let occ = 0;\r\n        // let name1 = name;\r\n        // while (data.map((e) => e.name).includes(name1)) {\r\n        //     occ++;\r\n        //     name1 = name + \"_\" + occ;\r\n        //     if (occ > 100) break;\r\n        // }\r\n        // if (occ > 100) return;\r\n        const newData = {\r\n            name: name,\r\n            content,\r\n        };\r\n        const updatedData = [newData, ...data];\r\n        dataUpdater(updatedData);\r\n    };\r\n    useEffect(() => {\r\n        if (!isDev) {\r\n            /* eslint-disable */\r\n            chrome.storage.local.set({ collections: data });\r\n            /* eslint-enable */\r\n        }\r\n    }, [data]);\r\n    useEffect(() => {\r\n        if (theme === \"dark\") {\r\n            document.body.classList.remove(\"lightTheme\");\r\n            document.body.classList.add(\"darkTheme\");\r\n        }\r\n        if (theme === \"light\") {\r\n            document.body.classList.remove(\"darkTheme\");\r\n            document.body.classList.add(\"lightTheme\");\r\n        }\r\n        if (!isDev) {\r\n            /* eslint-disable */\r\n            chrome.storage.local.set({ theme });\r\n            /* eslint-enable */\r\n        }\r\n    }, [theme]);\r\n    const addLinkToCollection = ({ colIndex, link, title, cover }) => {\r\n        let newContentItem = {\r\n            type: \"link\",\r\n            title: title || \"title\",\r\n            cover: cover || \"\",\r\n            href: link,\r\n        };\r\n        data[colIndex].content.unshift(newContentItem);\r\n        dataUpdater([...data]);\r\n    };\r\n    const removeCollections = (indexes) => {\r\n        if (data.length < Math.max(...indexes)) return;\r\n        let newData = [...data].filter((e, i) => {\r\n            return !indexes.includes(i);\r\n        });\r\n        dataUpdater(newData);\r\n    };\r\n    const removeLinkFromCollection = (colIndex, indexes) => {\r\n        if (data.length < colIndex) return;\r\n        if (data[colIndex].content.length < Math.max(...indexes)) return;\r\n        let newData = [...data];\r\n        newData[colIndex].content = newData[colIndex].content.filter((e, i) => {\r\n            return !indexes.includes(i);\r\n        });\r\n        dataUpdater(newData);\r\n    };\r\n    const changeCollectionIndex = (index1, index2) => {\r\n        let newData = [...data];\r\n        newData.splice(index1, 1);\r\n        newData.splice(index2, 0, data[index1]);\r\n        dataUpdater(newData);\r\n    };\r\n    const changeLinkIndex = (colIndex, index1, index2) => {\r\n        let newData = [...data[colIndex].content];\r\n        newData.splice(index1, 1);\r\n        newData.splice(index2, 0, data[colIndex].content[index1]);\r\n        data[colIndex].content = newData;\r\n        dataUpdater([...data]);\r\n    };\r\n    const initNewCollection2 = () => {\r\n        let content = [];\r\n        //eslint-disable-next-line\r\n        chrome.tabs.query({ currentWindow: true }).then((tabs) => {\r\n            tabs.forEach((e) => {\r\n                content.push({\r\n                    type: \"link\",\r\n                    href: e.url,\r\n                    title: e.title,\r\n                    cover: e.favIconUrl,\r\n                });\r\n            });\r\n            data.unshift({\r\n                name: new Date().toString().split(\" (\")[0],\r\n                cover: \"\",\r\n                content,\r\n            });\r\n            dataUpdater([...data]);\r\n        });\r\n    };\r\n    const editCollection = (e) => {\r\n        if (e.type === \"rename\") {\r\n            data[e.index].name = e.name;\r\n            dataUpdater([...data]);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {newColMaking === true ? (\r\n                <CollectionView\r\n                    isNew={true}\r\n                    newColMakingUpdater={newColMakingUpdater}\r\n                    collection={null}\r\n                    currentCollection={currentCollection}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    editCollection={editCollection}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    addToCollections={addToCollections}\r\n                    addLinkToCollection={addLinkToCollection}\r\n                    removeLinkFromCollection={removeLinkFromCollection}\r\n                    theme={theme}\r\n                    themeUpdater={themeUpdater}\r\n                />\r\n            ) : currentCollection === null ? (\r\n                <Collections\r\n                    collectionData={data}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    addLinkToCollection={addLinkToCollection}\r\n                    removeCollections={removeCollections}\r\n                    theme={theme}\r\n                    changeCollectionIndex={changeCollectionIndex}\r\n                    themeUpdater={themeUpdater}\r\n                />\r\n            ) : (\r\n                <CollectionView\r\n                    isNew={false}\r\n                    newColMakingUpdater={newColMakingUpdater}\r\n                    collection={data[currentCollection]}\r\n                    currentCollection={currentCollection}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    editCollection={editCollection}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    addLinkToCollection={addLinkToCollection}\r\n                    removeLinkFromCollection={removeLinkFromCollection}\r\n                    theme={theme}\r\n                    themeUpdater={themeUpdater}\r\n                    changeLinkIndex={changeLinkIndex}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"app\")\n);\n//todo: add option to excule cover pic;\n"],"sourceRoot":""}