{"version":3,"sources":["components/CheckBox.jsx","components/CollectionItem.jsx","components/TopBar.jsx","components/Collections.jsx","components/CollectionContentItem.jsx","components/CollectionView.jsx","App.js","index.js"],"names":["CheckBox","React","forwardRef","props","checkboxRef","onClick","e","stopPropagation","className","type","ref","xmlns","height","viewBox","width","fill","d","CollectionItem","cover","name","total","openCollection","collectionContextMenu","removeCollections","addToSelected","removeFromSelected","indexNumber","useRef","useState","checkboxState","checkboxStateUpdater","useEffect","current","addEventListener","state","target","checked","console","log","data-checked","tabIndex","onContextMenu","preventDefault","draggable","src","alt","TopBar","main","goBack","isNewCollection","newColMakingUpdater","currentCollection","addToCollections","editCollection","currentCollectionUpdater","undefined","inputRef","focus","Options","chrome","tabs","create","url","app","getDetails","id","window","close","defaultValue","onKeyDown","key","blur","onBlur","value","content","index","Collections","collectionData","newCollection1","newCollection2","mainContRef","collectionRef","contextMenu","contextMenuState","contextMenuStateUpdater","contextMenuSelectedIndex","contextMenuSelectedIndexUpdater","x","clientX","offsetWidth","y","clientY","document","body","offsetHeight","style","left","top","selectedCollection","selectedCollectionUpdater","includes","filter","length","path","deSelectAll","children","forEach","lastElementChild","firstElementChild","dispatchEvent","Event","PromptConfirm","PromptConfirmMaker","data-state","role","navigator","clipboard","writeText","JSON","stringify","map","href","link","active","links","windows","incognito","display","msg","callback","i","CollectionContentItem","title","linkContextMenu","removeLinkFromCollection","update","onMouseDown","button","CollectionView","collection","isNew","addLinkToCollection","collectionViewRef","selectedLink","selectedLinkUpdater","query","currentWindow","then","tab","colIndex","favIconUrl","isDev","process","App","data","dataUpdater","storage","sync","get","collections","set","getElementById","oncontextmenu","newColMaking","initNewCollection1","newContentItem","unshift","indexes","Math","max","newData","initNewCollection2","push","Date","toUTCString","updatedData","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0303fb4f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CheckBox = React.forwardRef((props, checkboxRef) => {\r\n    return (\r\n        <label\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n            }}\r\n            className=\"inputCheckboxCont\"\r\n        >\r\n            <input type=\"checkbox\" ref={checkboxRef} />\r\n            <span className=\"inputCheckbox\">\r\n                <span className=\"check\">\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                        fill=\"#FFFFFF\"\r\n                    >\r\n                        <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\r\n                    </svg>\r\n                </span>\r\n            </span>\r\n        </label>\r\n    );\r\n});\r\n\r\nexport default CheckBox;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\nconst CollectionItem = ({\r\n    cover,\r\n    name,\r\n    total,\r\n    openCollection,\r\n    removeCollections,\r\n    collectionContextMenu,\r\n    addToSelected,\r\n    removeFromSelected,\r\n    indexNumber,\r\n}) => {\r\n    const checkboxRef = useRef(null);\r\n    const [checkboxState, checkboxStateUpdater] = useState(false);\r\n    useEffect(() => {\r\n        checkboxRef.current.addEventListener(\"change\", (e) => {\r\n            let state = e.target.checked;\r\n            console.log(\"ddddddd\");\r\n            checkboxStateUpdater(state);\r\n        });\r\n    }, []);\r\n    //try making change inside checkbox\r\n    useEffect(() => {\r\n        if (checkboxState === true) addToSelected(indexNumber);\r\n        if (checkboxState === false) removeFromSelected(indexNumber);\r\n    }, [checkboxState]);\r\n    return (\r\n        <div\r\n            className=\"collectionItem\"\r\n            data-checked={checkboxState}\r\n            tabIndex=\"0\"\r\n            onClick={() => openCollection(indexNumber)}\r\n            onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                collectionContextMenu(e, indexNumber);\r\n            }}\r\n            draggable\r\n        >\r\n            <div className=\"cover\">\r\n                <img src={cover || \"\"} alt=\"Img\" />\r\n            </div>\r\n            <div className=\"info\">\r\n                <span className=\"name\">{name || \"ddddd\"}</span>\r\n                <span className=\"total\">\r\n                    {total\r\n                        ? total > 1\r\n                            ? total + \" Items\"\r\n                            : total + \" item\"\r\n                        : \"0 Item\"}\r\n                </span>\r\n            </div>\r\n            <div className=\"options\">\r\n                {/* <button\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        removeCollection(indexNumber);\r\n                    }}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                        fill=\"#FFFFFF\"\r\n                    >\r\n                        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n                    </svg>\r\n                </button> */}\r\n                <CheckBox ref={checkboxRef} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CollectionItem;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst TopBar = ({\r\n    main,\r\n    name,\r\n    goBack,\r\n    isNewCollection,\r\n    newColMakingUpdater,\r\n    currentCollection,\r\n    addToCollections,\r\n    editCollection,\r\n    currentCollectionUpdater,\r\n}) => {\r\n    isNewCollection = isNewCollection === undefined ? false : isNewCollection;\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n        if (isNewCollection) inputRef.current.focus();\r\n    }, [isNewCollection]);\r\n    const Options = (\r\n        <div className=\"options\">\r\n            <button\r\n                className=\"openFull\"\r\n                onClick={() => {\r\n                    /* eslint-disable */\r\n                    chrome.tabs.create({\r\n                        url:\r\n                            \"chrome-extension://\" +\r\n                            chrome.app.getDetails().id +\r\n                            \"/index.html\",\r\n                    });\r\n                    /* eslint-enable */\r\n                }}\r\n            >\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    height=\"24px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                    fill=\"#FFFFFF\"\r\n                >\r\n                    <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\r\n                </svg>\r\n            </button>\r\n            <button className=\"close\" onClick={() => window.close()}>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    height=\"24px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                    fill=\"#FFFFFF\"\r\n                >\r\n                    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {main ? (\r\n                <div id=\"topbar\">\r\n                    <h2>Collections</h2>\r\n                    {Options}\r\n                </div>\r\n            ) : (\r\n                <div id=\"topbar\">\r\n                    <button className=\"goback\" onClick={goBack}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            height=\"24px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            width=\"24px\"\r\n                            fill=\"#FFFFFF\"\r\n                        >\r\n                            <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\" />\r\n                        </svg>\r\n                    </button>\r\n                    <h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            ref={inputRef}\r\n                            defaultValue={name || \"New Collection\"}\r\n                            onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\") e.target.blur();\r\n                            }}\r\n                            onBlur={(e) => {\r\n                                if (isNewCollection) {\r\n                                    if (e.target.value === \"\")\r\n                                        newColMakingUpdater(false);\r\n                                }\r\n                                if (e.target.value === \"\")\r\n                                    return (e.target.value = name);\r\n                                if (!isNewCollection)\r\n                                    return editCollection({\r\n                                        type: \"rename\",\r\n                                        index: currentCollection,\r\n                                        name: e.target.value,\r\n                                    });\r\n                                if (isNewCollection) {\r\n                                    addToCollections({\r\n                                        name: e.target.value,\r\n                                        content: [],\r\n                                    });\r\n                                    newColMakingUpdater(false);\r\n                                    currentCollectionUpdater(0);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h2>\r\n                    {Options}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport CollectionItem from \"./CollectionItem\";\r\nimport TopBar from \"./TopBar\";\r\n\r\nconst Collections = ({\r\n    collectionData,\r\n    removeCollections,\r\n    currentCollectionUpdater,\r\n    newCollection1,\r\n    newCollection2,\r\n}) => {\r\n    const openCollection = (index) => {\r\n        currentCollectionUpdater(index);\r\n    };\r\n    const mainContRef = useRef(null);\r\n    const collectionRef = useRef(null);\r\n    const contextMenu = useRef(null);\r\n    const [contextMenuState, contextMenuStateUpdater] = useState(\"closed\");\r\n    const [contextMenuSelectedIndex, contextMenuSelectedIndexUpdater] =\r\n        useState(null);\r\n    const collectionContextMenu = (e, index) => {\r\n        if (contextMenu.current !== null) {\r\n            let x =\r\n                e.clientX >\r\n                mainContRef.current.offsetWidth -\r\n                    contextMenu.current.offsetWidth\r\n                    ? mainContRef.current.offsetWidth -\r\n                      contextMenu.current.offsetWidth -\r\n                      30\r\n                    : e.clientX;\r\n            let y =\r\n                e.clientY >\r\n                document.body.offsetHeight - contextMenu.current.offsetHeight\r\n                    ? document.body.offsetHeight -\r\n                      contextMenu.current.offsetHeight -\r\n                      30\r\n                    : e.clientY;\r\n            console.log(x, y);\r\n            contextMenuSelectedIndexUpdater(index);\r\n            contextMenu.current.style.left = x + \"px\";\r\n            contextMenu.current.style.top = y + \"px\";\r\n        }\r\n        contextMenuStateUpdater(\"opened\");\r\n    };\r\n    const [selectedCollection, selectedCollectionUpdater] = useState([]);\r\n    const addToSelected = (index) => {\r\n        if (selectedCollection.includes(index)) return;\r\n        selectedCollectionUpdater([...selectedCollection, index]);\r\n    };\r\n    const removeFromSelected = (index) => {\r\n        if (selectedCollection.includes(index)) {\r\n            selectedCollectionUpdater([\r\n                ...selectedCollection.filter((e) => e !== index),\r\n            ]);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        console.log(\"aaaa\", selectedCollection);\r\n        if (selectedCollection.length > 0) {\r\n        }\r\n    }, [selectedCollection]);\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", (e) => {\r\n            if (\r\n                contextMenu !== null &&\r\n                e.target !== contextMenu.current &&\r\n                !e.path.includes(contextMenu.current)\r\n            ) {\r\n                contextMenuStateUpdater(\"closed\");\r\n            }\r\n        });\r\n    }, []);\r\n    const deSelectAll = () => {\r\n        selectedCollectionUpdater([]);\r\n        [...collectionRef.current?.children].forEach((e) => {\r\n            e.lastElementChild.firstElementChild.firstElementChild.checked = false;\r\n            e.lastElementChild.firstElementChild.firstElementChild.dispatchEvent(\r\n                new Event(\"change\")\r\n            );\r\n        });\r\n    };\r\n    const [PromptConfirm, PromptConfirmMaker] = useState(\"\");\r\n    const promptConfirm = (msg, callback) => {\r\n        PromptConfirmMaker(\r\n            <div className=\"promptConfirmCont\">\r\n                <div className=\"prompt\">\r\n                    <div className=\"msg\">{msg}</div>\r\n                    <div className=\"option\">\r\n                        <button\r\n                            onClick={() => {\r\n                                callback();\r\n                                PromptConfirmMaker(\"\");\r\n                            }}\r\n                            className=\"warn\"\r\n                        >\r\n                            Confirm\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                PromptConfirmMaker(\"\");\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            <TopBar\r\n                main={true}\r\n                name=\"Collections\"\r\n                currentCollectionUpdater={currentCollectionUpdater}\r\n            />\r\n            <div id=\"main\" ref={mainContRef}>\r\n                <div\r\n                    className=\"contextMenu\"\r\n                    ref={contextMenu}\r\n                    data-state={contextMenuState}\r\n                    onClick={() => {\r\n                        contextMenuStateUpdater(\"closed\");\r\n                    }}\r\n                >\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            removeCollections([contextMenuSelectedIndex]);\r\n                        }}\r\n                    >\r\n                        Remove Collection\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            navigator.clipboard.writeText(\r\n                                JSON.stringify(\r\n                                    collectionData[contextMenuSelectedIndex]\r\n                                        .content\r\n                                )\r\n                            );\r\n                        }}\r\n                    >\r\n                        Copy Links(JSON)\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null) {\r\n                                let links = collectionData[\r\n                                    contextMenuSelectedIndex\r\n                                ].content.map((e) => e.href);\r\n                                links.forEach((link) => {\r\n                                    chrome.tabs.create({\r\n                                        url: link,\r\n                                        active: false,\r\n                                    }); /* eslint-enable */\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        Open All\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            let links = collectionData[\r\n                                contextMenuSelectedIndex\r\n                            ].content.map((e) => e.href);\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open All in new window\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            let links = collectionData[\r\n                                contextMenuSelectedIndex\r\n                            ].content.map((e) => e.href);\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open All in incognito window\r\n                    </li>\r\n                </div>\r\n                <div\r\n                    className=\"deleteSelected\"\r\n                    style={\r\n                        selectedCollection.length === 0\r\n                            ? { display: \"none\" }\r\n                            : { display: \"flex\" }\r\n                    }\r\n                >\r\n                    <span className=\"selectedInfo\">\r\n                        {selectedCollection.length} selected\r\n                    </span>\r\n                    <span className=\"options\">\r\n                        <button\r\n                            onClick={() => {\r\n                                // removeCollections(selectedCollection);\r\n                                // deSelectAll();\r\n                                promptConfirm(\r\n                                    \"Are you sure you want to delete \" +\r\n                                        selectedCollection.length +\r\n                                        \" collections\",\r\n                                    () => {\r\n                                        removeCollections(selectedCollection);\r\n                                        deSelectAll();\r\n                                    }\r\n                                );\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button onClick={deSelectAll}>\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className=\"createNew\"\r\n                    style={\r\n                        selectedCollection.length === 0\r\n                            ? { display: \"flex\" }\r\n                            : { display: \"none\" }\r\n                    }\r\n                >\r\n                    <button className=\"newEmpty\" onClick={newCollection1}>\r\n                        Create New Collection\r\n                    </button>\r\n                    <button className=\"newFromAll\" onClick={newCollection2}>\r\n                        Create New Collection from All Opened tabs\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    id=\"collections\"\r\n                    ref={collectionRef}\r\n                    className=\"collection-view\"\r\n                >\r\n                    {collectionData === null ? (\r\n                        <p>No Collection</p>\r\n                    ) : collectionData.length === 0 ? (\r\n                        <p>No Collection</p>\r\n                    ) : (\r\n                        collectionData.map((e, i) => (\r\n                            <CollectionItem\r\n                                key={e.name + i}\r\n                                name={e.name}\r\n                                cover={e.cover}\r\n                                total={e.content.length}\r\n                                indexNumber={i}\r\n                                openCollection={openCollection}\r\n                                removeCollections={removeCollections}\r\n                                collectionContextMenu={collectionContextMenu}\r\n                                addToSelected={addToSelected}\r\n                                removeFromSelected={removeFromSelected}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {PromptConfirm}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Collections;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nconst CollectionContentItem = ({\r\n    title,\r\n    href,\r\n    cover,\r\n    removeLinkFromCollection,\r\n    currentCollection,\r\n    linkContextMenu,\r\n    addToSelected,\r\n    removeFromSelected,\r\n    indexNumber,\r\n}) => {\r\n    const checkboxRef = useRef(null);\r\n    const [checkboxState, checkboxStateUpdater] = useState(false);\r\n    useEffect(() => {\r\n        checkboxRef.current.addEventListener(\"change\", (e) => {\r\n            let state = e.target.checked;\r\n            console.log(\"ddddddd\");\r\n            checkboxStateUpdater(state);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (checkboxState === true) addToSelected(indexNumber);\r\n        if (checkboxState === false) removeFromSelected(indexNumber);\r\n    }, [checkboxState]);\r\n    return (\r\n        <div\r\n            className=\"collectionContentItem collectionItem\"\r\n            tabIndex=\"0\"\r\n            data-checked={checkboxState}\r\n            onClick={() => {\r\n                /* eslint-disable */\r\n                chrome.tabs.update({ url: href });\r\n                /* eslint-enable */\r\n            }}\r\n            onMouseDown={(e) => {\r\n                e.preventDefault();\r\n                if (e.button === 1)\r\n                    /* eslint-disable */\r\n                    chrome.tabs.create({ url: href, active: false });\r\n                /* eslint-enable */\r\n            }}\r\n            onContextMenu={(e) => {\r\n                linkContextMenu(e, indexNumber);\r\n            }}\r\n            draggable\r\n        >\r\n            <div className=\"cover\">\r\n                <img src={cover || \"\"} alt=\"Img\" />\r\n            </div>\r\n            <div className=\"info\">\r\n                <span className=\"name\">{title || \"ddddd\"}</span>\r\n                <span className=\"link\">{href || \"\"}</span>\r\n            </div>\r\n            <div className=\"options\">\r\n                {/* <button\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        removeLinkFromCollection(currentCollection, indexNumber);\r\n                    }}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        width=\"24px\"\r\n                        fill=\"#FFFFFF\"\r\n                    >\r\n                        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n                    </svg>\r\n                </button> */}\r\n                <CheckBox ref={checkboxRef} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CollectionContentItem;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport CollectionContentItem from \"./CollectionContentItem\";\r\nimport TopBar from \"./TopBar\";\r\n\r\nconst CollectionView = ({\r\n    collection,\r\n    currentCollection,\r\n    currentCollectionUpdater,\r\n    isNew,\r\n    newColMakingUpdater,\r\n    newCollection1,\r\n    newCollection2,\r\n    addToCollections,\r\n    editCollection,\r\n    addLinkToCollection,\r\n    removeLinkFromCollection,\r\n}) => {\r\n    const goBack = () => {\r\n        currentCollectionUpdater(null);\r\n        if (isNew) newColMakingUpdater(false);\r\n    };\r\n    const mainContRef = useRef(null);\r\n    const collectionViewRef = useRef(null);\r\n    const contextMenu = useRef(null);\r\n    const [contextMenuState, contextMenuStateUpdater] = useState(\"closed\");\r\n    const [contextMenuSelectedIndex, contextMenuSelectedIndexUpdater] =\r\n        useState(null);\r\n    const linkContextMenu = (e, index) => {\r\n        if (contextMenu.current !== null) {\r\n            let x =\r\n                e.clientX >\r\n                mainContRef.current.offsetWidth -\r\n                    contextMenu.current.offsetWidth\r\n                    ? mainContRef.current.offsetWidth -\r\n                      contextMenu.current.offsetWidth -\r\n                      30\r\n                    : e.clientX;\r\n            let y =\r\n                e.clientY >\r\n                document.body.offsetHeight - contextMenu.current.offsetHeight\r\n                    ? document.body.offsetHeight -\r\n                      contextMenu.current.offsetHeight -\r\n                      30\r\n                    : e.clientY;\r\n            console.log(x, y);\r\n            contextMenuSelectedIndexUpdater(index);\r\n            contextMenu.current.style.left = x + \"px\";\r\n            contextMenu.current.style.top = y + \"px\";\r\n        }\r\n        contextMenuStateUpdater(\"opened\");\r\n    };\r\n    const [selectedLink, selectedLinkUpdater] = useState([]);\r\n    const addToSelected = (index) => {\r\n        if (selectedLink.includes(index)) return;\r\n        selectedLinkUpdater([...selectedLink, index]);\r\n    };\r\n    const removeFromSelected = (index) => {\r\n        if (selectedLink.includes(index)) {\r\n            selectedLinkUpdater([...selectedLink.filter((e) => e !== index)]);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        console.log(\"aaaa\", selectedLink);\r\n        if (selectedLink.length > 0) {\r\n        }\r\n    }, [selectedLink]);\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", (e) => {\r\n            if (\r\n                contextMenu !== null &&\r\n                e.target !== contextMenu.current &&\r\n                !e.path.includes(contextMenu.current)\r\n            ) {\r\n                contextMenuStateUpdater(\"closed\");\r\n            }\r\n        });\r\n    }, []);\r\n    const deSelectAll = () => {\r\n        selectedLinkUpdater([]);\r\n        [...collectionViewRef.current?.children].forEach((e) => {\r\n            e.lastElementChild.firstElementChild.firstElementChild.checked = false;\r\n            e.lastElementChild.firstElementChild.firstElementChild.dispatchEvent(\r\n                new Event(\"change\")\r\n            );\r\n        });\r\n    };\r\n    const addLink = (e) => {\r\n        console.log(\"dddd\");\r\n        //eslint-disable-next-line\r\n        chrome.tabs\r\n            .query({\r\n                active: true,\r\n                currentWindow: true,\r\n            })\r\n            .then((tabs) => {\r\n                const tab = tabs[0];\r\n                console.log(tab);\r\n                addLinkToCollection({\r\n                    colIndex: isNew ? 0 : currentCollection,\r\n                    link: tab.url,\r\n                    title: tab.title,\r\n                    cover: tab.favIconUrl,\r\n                });\r\n            });\r\n    };\r\n    let content;\r\n    content = (\r\n        <>\r\n            <TopBar\r\n                main={false}\r\n                name={collection === null ? null : collection.name}\r\n                goBack={goBack}\r\n                isNewCollection={isNew}\r\n                addToCollections={addToCollections}\r\n                newColMakingUpdater={newColMakingUpdater}\r\n                currentCollectionUpdater={currentCollectionUpdater}\r\n                editCollection={editCollection}\r\n                currentCollection={currentCollection}\r\n            />\r\n            <div id=\"main\" ref={mainContRef}>\r\n                <div\r\n                    className=\"contextMenu\"\r\n                    ref={contextMenu}\r\n                    data-state={contextMenuState}\r\n                    onClick={() => {\r\n                        contextMenuStateUpdater(\"closed\");\r\n                    }}\r\n                >\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            removeLinkFromCollection(currentCollection, [\r\n                                contextMenuSelectedIndex,\r\n                            ]);\r\n                        }}\r\n                    >\r\n                        Remove Link\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                navigator.clipboard.writeText(\r\n                                    collection.content[contextMenuSelectedIndex]\r\n                                        .href\r\n                                );\r\n                        }}\r\n                    >\r\n                        Copy Link\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.tabs.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                    state: \"maximized\",\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open in new window\r\n                    </li>\r\n                    <li\r\n                        role=\"button\"\r\n                        onClick={() => {\r\n                            /* eslint-disable */\r\n                            if (contextMenuSelectedIndex !== null)\r\n                                chrome.windows.create({\r\n                                    url: collection.content[\r\n                                        contextMenuSelectedIndex\r\n                                    ].href,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                        }}\r\n                    >\r\n                        Open in incognito window\r\n                    </li>\r\n                </div>\r\n                <div\r\n                    className=\"deleteSelected\"\r\n                    style={\r\n                        selectedLink.length === 0\r\n                            ? { display: \"none\" }\r\n                            : { display: \"flex\" }\r\n                    }\r\n                >\r\n                    <span className=\"selectedInfo\">\r\n                        {selectedLink.length} selected\r\n                    </span>\r\n                    <span className=\"options\">\r\n                        <button\r\n                            onClick={() => {\r\n                                /* eslint-disable */\r\n                                let links = collection.content\r\n                                    .filter((e, i) => selectedLink.includes(i))\r\n                                    .map((e) => e.href);\r\n                                links.forEach((link) => {\r\n                                    chrome.tabs.create({\r\n                                        url: link,\r\n                                        active: false,\r\n                                    }); /* eslint-enable */\r\n                                });\r\n                            }}\r\n                        >\r\n                            Open\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                /* eslint-disable */\r\n                                let links = collection.content\r\n                                    .filter((e, i) => selectedLink.includes(i))\r\n                                    .map((e) => e.href);\r\n                                chrome.windows.create({\r\n                                    url: links,\r\n                                    state: \"maximized\",\r\n                                    incognito: true,\r\n                                }); /* eslint-enable */\r\n                            }}\r\n                        >\r\n                            Open Incognito\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                removeLinkFromCollection(\r\n                                    currentCollection,\r\n                                    selectedLink\r\n                                );\r\n                                deSelectAll();\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button onClick={deSelectAll}>\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#FFFFFF\"\r\n                            >\r\n                                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className=\"createNew\"\r\n                    style={\r\n                        selectedLink.length === 0\r\n                            ? { display: \"flex\" }\r\n                            : { display: \"none\" }\r\n                    }\r\n                >\r\n                    <button className=\"addCurrentLink\" onClick={addLink}>\r\n                        Add Current Link\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    id=\"collectionView \"\r\n                    className=\"collection-view\"\r\n                    ref={collectionViewRef}\r\n                >\r\n                    {collection === null ? (\r\n                        <p>No Item</p>\r\n                    ) : collection.content.length === 0 ? (\r\n                        <p>No Item</p>\r\n                    ) : (\r\n                        collection.content.map((e, i) => (\r\n                            <CollectionContentItem\r\n                                cover={e.cover}\r\n                                title={e.title}\r\n                                href={e.href}\r\n                                key={e.href + i}\r\n                                indexNumber={i}\r\n                                currentCollection={currentCollection}\r\n                                removeLinkFromCollection={\r\n                                    removeLinkFromCollection\r\n                                }\r\n                                linkContextMenu={linkContextMenu}\r\n                                addToSelected={addToSelected}\r\n                                removeFromSelected={removeFromSelected}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n    return content;\r\n};\r\n\r\nexport default CollectionView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Collections from \"./components/Collections\";\r\nimport CollectionView from \"./components/CollectionView\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nconsole.log(process.env.NODE_ENV, isDev);\r\nconst DAT = [\r\n    {\r\n        name: \"col1\",\r\n        cover: \"\",\r\n        content: [\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: \"col2\",\r\n        cover: \"\",\r\n        content: [],\r\n    },\r\n    {\r\n        name: \"col3\",\r\n        cover: \"\",\r\n        content: [\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: \"col4\",\r\n        cover: \"\",\r\n        content: [\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n            {\r\n                type: \"link\",\r\n                title: \"dddd\",\r\n                cover: \"\",\r\n                href: \"https://github.com/\",\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nconst App = () => {\r\n    const [data, dataUpdater] = useState([]); /* eslint-disable */\r\n    useEffect(() => {\r\n        if (isDev) {\r\n            dataUpdater(DAT);\r\n        } else {\r\n            chrome.storage.sync.get(\"collections\", ({ collections }) => {\r\n                console.log(\"d\", collections);\r\n                if (collections === undefined) {\r\n                    dataUpdater([]);\r\n                    chrome.storage.sync.set({ collections: [] }, () => {\r\n                        console.log(\"yeee\", data);\r\n                    });\r\n                } else dataUpdater(collections);\r\n                console.log(\"data1\", data);\r\n            });\r\n        }\r\n        document.getElementById(\"app\").oncontextmenu = (e) => {\r\n            e.preventDefault();\r\n        };\r\n    }, []);\r\n    /* eslint-enable */\r\n    const [currentCollection, currentCollectionUpdater] = useState(null);\r\n    const [newColMaking, newColMakingUpdater] = useState(false);\r\n\r\n    const initNewCollection1 = () => {\r\n        newColMakingUpdater(true);\r\n    };\r\n    const addToCollections = ({ name, content }) => {\r\n        // let occ = 0;\r\n        // let name1 = name;\r\n        // console.log(name1);\r\n        // while (data.map((e) => e.name).includes(name1)) {\r\n        //     occ++;\r\n        //     name1 = name + \"_\" + occ;\r\n        //     console.log(name1);\r\n        //     if (occ > 100) break;\r\n        // }\r\n        // if (occ > 100) return;\r\n        const newData = {\r\n            name: name,\r\n            cover: \"\",\r\n            content,\r\n        };\r\n        const updatedData = [newData, ...data];\r\n        console.log(\"new\");\r\n        dataUpdater(updatedData);\r\n    };\r\n    useEffect(() => {\r\n        console.log(data);\r\n        if (!isDev) {\r\n            /* eslint-disable */\r\n            console.log(data);\r\n            chrome.storage.sync.set({ collections: data });\r\n            chrome.storage.sync.get(\"collections\", ({ collections }) => {\r\n                console.log(data, collections);\r\n            });\r\n            /* eslint-enable */\r\n        }\r\n    }, [data]);\r\n    const addLinkToCollection = ({ colIndex, link, title, cover }) => {\r\n        let newContentItem = {\r\n            type: \"link\",\r\n            title: title || \"title\",\r\n            cover: cover || \"\",\r\n            href: link,\r\n        };\r\n        console.log(\"newContentItem\", newContentItem);\r\n        data[colIndex].content.unshift(newContentItem);\r\n        dataUpdater([...data]);\r\n    };\r\n    const removeCollections = (indexes) => {\r\n        // data.splice(index, 1);\r\n        if (data.length < Math.max(...indexes)) return;\r\n        let newData = [...data].filter((e, i) => {\r\n            console.log(indexes.includes(i), indexes, i);\r\n            return !indexes.includes(i);\r\n        });\r\n        console.log(newData);\r\n        dataUpdater(newData);\r\n    };\r\n    const removeLinkFromCollection = (colIndex, indexes) => {\r\n        if (data.length < colIndex) return;\r\n        if (data[colIndex].content.length < Math.max(...indexes)) return;\r\n        console.log(colIndex, indexes);\r\n        let newData = [...data];\r\n        newData[colIndex].content = newData[colIndex].content.filter((e, i) => {\r\n            console.log(indexes.includes(i), indexes, i);\r\n            return !indexes.includes(i);\r\n        });\r\n        console.log(newData);\r\n        dataUpdater(newData);\r\n    };\r\n    const initNewCollection2 = () => {\r\n        let content = [];\r\n        //eslint-disable-next-line\r\n        chrome.tabs.query({ currentWindow: true }).then((tabs) => {\r\n            console.log(tabs);\r\n            tabs.forEach((e) => {\r\n                content.push({\r\n                    type: \"link\",\r\n                    href: e.url,\r\n                    title: e.title,\r\n                    cover: e.favIconUrl,\r\n                });\r\n            });\r\n            data.unshift({\r\n                name: new Date().toUTCString(),\r\n                cover: \"\",\r\n                content,\r\n            });\r\n            dataUpdater([...data]);\r\n        });\r\n    };\r\n    const editCollection = (e) => {\r\n        if (e.type === \"rename\") {\r\n            // let index;\r\n            // let occ = 0;\r\n            // data.forEach((i, j) => {\r\n            //     if (i.name === e.oldName) {\r\n            //         index = j;\r\n            //         occ++;\r\n            //     }\r\n            // });\r\n            // if (occ > 1) return;\r\n            data[e.index].name = e.name;\r\n            dataUpdater(data);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {newColMaking === true ? (\r\n                <CollectionView\r\n                    isNew={true}\r\n                    newColMakingUpdater={newColMakingUpdater}\r\n                    collection={null}\r\n                    currentCollection={currentCollection}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    editCollection={editCollection}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    addToCollections={addToCollections}\r\n                    addLinkToCollection={addLinkToCollection}\r\n                    removeLinkFromCollection={removeLinkFromCollection}\r\n                />\r\n            ) : currentCollection === null ? (\r\n                <Collections\r\n                    collectionData={data}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    removeCollections={removeCollections}\r\n                />\r\n            ) : (\r\n                <CollectionView\r\n                    isNew={false}\r\n                    newColMakingUpdater={newColMakingUpdater}\r\n                    collection={data[currentCollection]}\r\n                    currentCollection={currentCollection}\r\n                    newCollection1={initNewCollection1}\r\n                    newCollection2={initNewCollection2}\r\n                    editCollection={editCollection}\r\n                    currentCollectionUpdater={currentCollectionUpdater}\r\n                    addLinkToCollection={addLinkToCollection}\r\n                    removeLinkFromCollection={removeLinkFromCollection}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n// \"icons\": {\r\n//     \"16\": \"\",\r\n//     \"48\": \"\",\r\n//     \"128\": \"\"\r\n// },\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"app\")\n);\n"],"sourceRoot":""}